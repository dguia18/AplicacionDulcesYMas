þ:
Zc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Base\GenericRepository.cs
	namespace		 	
Infrastructure		
 
.		 
Base		 
{

 
public 
class 
GenericRepository 
<  
T  !
>! "
:# $
IGenericRepository% 7
<7 8
T8 9
>9 :
where 	
T
 
: 

BaseEntity 
{ 
	protected 

IDbContext 
_db 
; 
	protected 
readonly 
DbSet 
< 
T 
> 
_dbset $
;$ %
	protected 
GenericRepository 
( 

IDbContext (
context) 0
)0 1
{ 
_db 
= 
context	 
; 
_dbset 	
=
 
context 
. 
Set 
< 
T 
> 
( 
) 
; 
} 
public 
virtual	 
IEnumerable 
< 
T 
> 
GetAll  &
(& '
)' (
{ 
return 	
_dbset
 
. 
AsEnumerable 
< 
T 
>  
(  !
)! "
;" #
} 
public 
virtual	 
T 
Find 
( 
object 
id !
)! "
{ 
return   	
_dbset  
 
.   
Find   
(   
id   
)   
;   
}!! 
	protected%% 

IQueryable%% 
<%% 
T%% 
>%% 
FindByAsQueryable%% +
(%%+ ,

Expression%%, 6
<%%6 7
Func%%7 ;
<%%; <
T%%< =
,%%= >
bool%%? C
>%%C D
>%%D E
	predicate%%F O
)%%O P
{&& 
return'' 	
_dbset''
 
.'' 
Where'' 
('' 
	predicate''  
)''  !
;''! "
}(( 
	protected** 

IQueryable** 
<** 
T** 
>** 
AsQueryable** %
(**% &
)**& '
{++ 
return,, 	
_dbset,,
 
.,, 
AsQueryable,, 
(,, 
),, 
;,, 
}-- 
public.. 
IEnumerable..	 
<.. 
T.. 
>.. 
FindBy.. 
(.. 

Expression.. )
<..) *
Func..* .
<... /
T../ 0
,..0 1
bool..2 6
>..6 7
>..7 8
	predicate..9 B
)..B C
{// 
IEnumerable00 
<00 
T00 
>00 
query00 
=00 
_dbset00  
.00  !
Where00! &
(00& '
	predicate00' 0
)000 1
.001 2
AsEnumerable002 >
(00> ?
)00? @
;00@ A
return11 	
query11
 
;11 
}22 
public33 
virtual33	 

IQueryable33 
<33 
T33 
>33 
FindBy33 %
(33% &

Expression44 
<44 
Func44 
<44 
T44 
,44 
bool44 
>44 
>44 
filter44 "
=44# $
null44% )
,44) *
Func55 
<55 

IQueryable55 
<55 
T55 
>55 
,55 
IOrderedQueryable55 '
<55' (
T55( )
>55) *
>55* +
orderBy55, 3
=554 5
null556 :
,55: ;
string66 
includeProperties66	 
=66 
$str66 
)66  
{77 

IQueryable88 
<88 
T88 
>88 
query88 
=88 
_dbset88 
;88  
if:: 
(:: 
filter:: 
!=:: 
null:: 
):: 
{;; 
query<< 	
=<<
 
query<< 
.<< 
Where<< 
(<< 
filter<< 
)<< 
;<<  
}== 
foreach?? 

(?? 
var?? 
includeProperty?? 
in??  "
includeProperties??# 4
.??4 5
Split??5 :
(@@ 
new@@ 
char@@	 
[@@ 
]@@ 
{@@ 
$char@@ 
}@@ 
,@@ 
StringSplitOptions@@ +
.@@+ ,
RemoveEmptyEntries@@, >
)@@> ?
)@@? @
{AA 
queryBB 	
=BB
 
queryBB 
.BB 
IncludeBB 
(BB 
includePropertyBB )
)BB) *
;BB* +
}CC 
ifEE 
(EE 
orderByEE 
!=EE 
nullEE 
)EE 
{FF 
returnGG 

orderByGG 
(GG 
queryGG 
)GG 
;GG 
}HH 
elseII 
{JJ 
returnKK 

queryKK 
;KK 
}LL 
}MM 
publicOO 
TOO	 

FindFirstOrDefaultOO 
(OO 

ExpressionOO (
<OO( )
FuncOO) -
<OO- .
TOO. /
,OO/ 0
boolOO1 5
>OO5 6
>OO6 7
	predicateOO8 A
)OOA B
{PP 
TQQ 
queryQQ 

=QQ 
_dbsetQQ 
.QQ 
FirstOrDefaultQQ "
(QQ" #
	predicateQQ# ,
)QQ, -
;QQ- .
returnRR 	
queryRR
 
;RR 
}SS 
publicTT 
virtualTT	 
voidTT 
AddTT 
(TT 
TTT 
entityTT "
)TT" #
{UU 
_dbsetVV 	
.VV	 

AddVV
 
(VV 
entityVV 
)VV 
;VV 
}WW 
publicYY 
virtualYY	 
voidYY 
DeleteYY 
(YY 
TYY 
entityYY %
)YY% &
{ZZ 
_dbset[[ 	
.[[	 

Remove[[
 
([[ 
entity[[ 
)[[ 
;[[ 
}\\ 
public]] 
virtual]]	 
void]] 
Edit]] 
(]] 
T]] 
entity]] #
)]]# $
{^^ 
_db__ 
.__ 
SetModified__ 
(__ 
entity__ 
)__ 
;__ 
}`` 
publicaa 
virtualaa	 
voidaa 
DeleteRangeaa !
(aa! "
Listaa" &
<aa& '
Taa' (
>aa( )
entitiesaa* 2
)aa2 3
{bb 
_dbsetcc 	
.cc	 

RemoveRangecc
 
(cc 
entitiescc 
)cc 
;cc  
}dd 
publicee 
virtualee	 
voidee 
AddRangeee 
(ee 
Listee #
<ee# $
Tee$ %
>ee% &
entitiesee' /
)ee/ 0
{ff 
_dbsetgg 	
.gg	 

AddRangegg
 
(gg 
entitiesgg 
)gg 
;gg 
}hh 
}ii 
}jj  
Sc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Base\IDbContext.cs
	namespace 	
Infrastructure
 
. 
Base 
{ 
public 

	interface 

IDbContext 
{ 
DbSet 
< 
T 
> 
Set 
< 
T 
> 
( 
) 
where 
T  !
:" #
class$ )
;) *
EntityEntry		 
Entry		 
(		 
object		  
entity		! '
)		' (
;		( )
EntityEntry

 
<

 
TEntity

 
>

 
Entry

 "
<

" #
TEntity

# *
>

* +
(

+ ,
TEntity

, 3
entity

4 :
)

: ;
where

< A
TEntity

B I
:

J K
class

L Q
;

Q R
void 
SetModified 
( 
object 
entity  &
)& '
;' (
int 
SaveChanges 
( 
) 
; 
} 
public 

class 
DbContextBase 
:  
	DbContext! *
,* +

IDbContext, 6
{ 
public 
DbContextBase 
( 
DbContextOptions -
options. 5
)5 6
:7 8
base9 =
(= >
options> E
)E F
{ 	
} 	
public 
void 
SetModified 
(  
object  &
entity' -
)- .
{ 	
Entry 
( 
entity 
) 
. 
State 
=  !
EntityState" -
.- .
Modified. 6
;6 7
} 	
} 
} ß=
Sc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Base\UnitOfWork.cs
	namespace 	
Infrastructure
 
. 
Base 
{ 
public 

sealed 
class 

UnitOfWork "
:# $
IUnitOfWork% 0
{		 
private

 

IDbContext

 

_dbContext

 %
;

% &
private 
IProductoRepository #
_productoRepository$ 7
;7 8
private  
ICategoriaRepository $ 
_categoriaRepository% 9
;9 :
private 
IRoleRepository 
_roleRepository  /
;/ 0
private %
ITerceroUsuarioRepository )%
_terceroUsuarioRepository* C
;C D
private 
ITerceroRepository "
_terceroRepository# 5
;5 6
private &
ITerceroProvedorRepository *&
_terceroProvedorRepository+ E
;E F
private &
ITerceroEmpleadoRepository *&
_terceroEmpleadoRepository+ E
;E F
private %
ITerceroClienteRepository )%
_terceroClienteRepository* C
;C D
private 
ICompraRepository !
_compraRepository" 3
;3 4
private #
ISubCategoriaRepository '#
_subCategoriaRepository( ?
;? @
private "
ITransaccionRepository &"
_transaccionRepository' =
;= >
public 
ITerceroRepository !
TerceroRepository" 3
{ 	
get 
{ 
return 
_terceroRepository )
??* ,
( 
_terceroRepository '
=( )
new* -
TerceroRepository. ?
(? @

_dbContext@ J
)J K
)K L
;L M
} 
} 	
public   &
ITerceroProvedorRepository   )%
TerceroProvedorRepository  * C
{!! 	
get"" 
{## 
return$$ &
_terceroProvedorRepository$$ 1
??$$2 4
(%% &
_terceroProvedorRepository%% /
=%%0 1
new%%2 5&
TerceroProveedorRepository%%6 P
(%%P Q

_dbContext%%Q [
)%%[ \
)%%\ ]
;%%] ^
}&& 
}'' 	
public)) %
ITerceroUsuarioRepository)) ($
TerceroUsuarioRepository))) A
{** 	
get++ 
{,, 
return-- %
_terceroUsuarioRepository-- 0
??--1 3
(.. %
_terceroUsuarioRepository.. .
=../ 0
new..1 4$
TerceroUsuarioRepository..5 M
(..M N

_dbContext..N X
)..X Y
)..Y Z
;..Z [
}// 
}11 	
public33 
IRoleRepository33 
RoleRepository33 -
{44 	
get55 
{66 
return77 
_roleRepository77 &
??77' )
(77* +
_roleRepository77+ :
=77; <
new77= @
RoleRepository77A O
(77O P

_dbContext77P Z
)77Z [
)77[ \
;77\ ]
}88 
}99 	
public;; &
ITerceroEmpleadoRepository;; )%
TerceroEmpleadoRepository;;* C
{<< 	
get== 
{>> 
return?? &
_terceroEmpleadoRepository?? 1
????2 4
(@@ &
_terceroEmpleadoRepository@@ ,
=@@- .
new@@/ 2%
TerceroEmpleadoRepository@@3 L
(@@L M

_dbContext@@M W
)@@W X
)@@X Y
;@@Y Z
}AA 
}BB 	
publicDD %
ITerceroClienteRepositoryDD ($
TerceroClienteRepositoryDD) A
{EE 	
getFF 
{GG 
returnHH %
_terceroClienteRepositoryHH 0
??HH1 3
(II %
_terceroClienteRepositoryII ,
=II- .
newII/ 2$
TerceroClienteRepositoryII3 K
(IIK L

_dbContextIIL V
)IIV W
)IIW X
;IIX Y
}JJ 
}KK 	
publicMM 
IProductoRepositoryMM "
ProductoRepositoryMM# 5
{NN 	
getOO 
{PP 
returnQQ 
_productoRepositoryQQ *
??QQ+ -
(RR 
_productoRepositoryRR (
=RR) *
newRR+ .
ProductoRepositoryRR/ A
(RRA B

_dbContextRRB L
)RRL M
)RRM N
;RRN O
}SS 
}TT 	
publicWW #
ISubCategoriaRepositoryWW &"
SubCategoriaRepositoryWW' =
{XX 	
getYY 
{ZZ 
return[[ #
_subCategoriaRepository[[ .
??[[/ 1
(\\ #
_subCategoriaRepository\\ *
=\\+ ,
new\\- 0"
SubCategoriaRepository\\1 G
(\\G H

_dbContext\\H R
)\\R S
)\\S T
;\\T U
}]] 
}^^ 	
public``  
ICategoriaRepository`` #
CategoriaRepository``$ 7
{aa 	
getbb 
{bb 
returnbb  
_categoriaRepositorybb -
??bb. 0
(bb1 2 
_categoriaRepositorybb2 F
=bbG H
newbbI L
CategoriaRepositorybbM `
(bb` a

_dbContextbba k
)bbk l
)bbl m
;bbm n
}bbo p
}cc 	
publicff 
ICompraRepositoryff  
CompraRepositoryff! 1
{gg 	
gethh 
{ii 
returnjj 
_compraRepositoryjj (
??jj) +
(kk 
_compraRepositorykk &
=kk' (
newkk) ,
CompraRepositorykk- =
(kk= >

_dbContextkk> H
)kkH I
)kkI J
;kkJ K
}ll 
}mm 	
publicnn "
ITransaccionRepositorynn %!
TransaccionRepositorynn& ;
{oo 	
getpp 
{qq 
returnrr 
thisrr 
.rr "
_transaccionRepositoryrr 2
??rr3 5
(ss 
thisss 
.ss "
_transaccionRepositoryss 4
=ss5 6
newss7 :!
TransaccionRepositoryss; P
(ssP Q
thisssQ U
.ssU V

_dbContextssV `
)ss` a
)ssa b
;ssb c
}tt 
}uu 	
publicww 

UnitOfWorkww 
(ww 

IDbContextww $
contextww% ,
)ww, -
{xx 	

_dbContextyy 
=yy 
contextyy  
;yy  !
}zz 	
public}} 
int}} 
Commit}} 
(}} 
)}} 
{~~ 	
return 

_dbContext 
. 
SaveChanges )
() *
)* +
;+ ,
}
 	
public
 
void
 
Dispose
 
(
 
)
 
{
 	
Dispose
 
(
 
true
 
)
 
;
 
}
 	
private
 
void
 
Dispose
 
(
 
bool
 !
	disposing
" +
)
+ ,
{
 	
if
 
(
 
	disposing
 
&&
 

_dbContext
 '
!=
( *
null
+ /
)
/ 0
{
 
(
 
(
 
	DbContext
 
)
 

_dbContext
 &
)
& '
.
' (
Dispose
( /
(
/ 0
)
0 1
;
1 2

_dbContext
 
=
 
null
 !
;
! "
}
 
}
 	
}
 
} H
Uc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\DulcesYmasContext.cs
	namespace 	
Infrastructure
 
{ 
public		 

class		 
DulcesYmasContext		 "
:		# $
DbContextBase		% 2
{

 
public 
DulcesYmasContext  
(  !
DbContextOptions! 1
options2 9
)9 :
:; <
base= A
(A B
optionsB I
)I J
{ 	
} 	
public 
DbSet 
< 
Role 
> 
Roles  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DbSet 
< 
Tercero 
> 
Terceros &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
TerceroCliente #
># $
TercerosCliente% 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
public 
DbSet 
< (
TerceroClientePrecioProducto 1
>1 2!
TerceroClientePrecios3 H
{I J
getK N
;N O
setP S
;S T
}U V
public 
DbSet 
< 
TerceroUsuario #
># $
TerceroUsuarios% 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
public 
DbSet 
< 
TerceroProveedor %
>% &
TercerosProvedor' 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
DbSet 
< 
TerceroEmpleado $
>$ %
TercerosEmpleados& 7
{8 9
get: =
;= >
set? B
;B C
}D E
public 
DbSet 
< 
TerceroPropietario '
>' (
TercerosPropietario) <
{= >
get? B
;B C
setD G
;G H
}I J
public 
DbSet 
<  
ProductoMateriaPrima )
>) *!
ProductosMateriaPrima+ @
{A B
getC F
;F G
setH K
;K L
}M N
public 
DbSet 
< $
ProductoParaFabricarDuro -
>- .%
ProductosParaFabricarDuro/ H
{I J
getK N
;N O
setP S
;S T
}U V
public 
DbSet 
< %
ProductoParaFabricarSuave .
>. /&
ProductosParaFabricarSuave0 J
{K L
getM P
;P Q
setR U
;U V
}W X
public 
DbSet 
< +
ProductoParaVenderConEnvoltorio 4
>4 5,
 ProductosParaVenderConEnvoltorio6 V
{W X
getY \
;\ ]
set^ a
;a b
}c d
public 
DbSet 
< +
ProductoParaVenderSinEnvoltorio 4
>4 5,
 ProductosParaVenderSinEnvoltorio6 V
{W X
getY \
;\ ]
set^ a
;a b
}c d
public 
DbSet 
< %
ProductoParaVenderDetalle .
>. /'
ProductosParaVenderDetalles0 K
{L M
getN Q
;Q R
setS V
;V W
}X Y
public 
DbSet 
< 
ProductoCategoria &
>& '

Categorias( 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 
DbSet 
<  
ProductoSubCategoria )
>) *
SubCategorias+ 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
public 
DbSet 
< 
Fabricacion  
>  !
Fabricaciones" /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
DbSet 
< 
FabricacionDetalle '
>' (
FabricacionDetalles) <
{= >
get? B
;B C
setD G
;G H
}I J
public   
DbSet   
<   
Compra   
>   
Compras   $
{  % &
get  ' *
;  * +
set  , /
;  / 0
}  1 2
public!! 
DbSet!! 
<!! 
CompraDetalle!! "
>!!" #
CompraDetalles!!$ 2
{!!3 4
get!!5 8
;!!8 9
set!!: =
;!!= >
}!!? @
public"" 
DbSet"" 
<"" 
Venta"" 
>"" 
Ventas"" "
{""# $
get""% (
;""( )
set""* -
;""- .
}""/ 0
public## 
DbSet## 
<## 
VentaDetalle## !
>##! "
VentaDetalles### 0
{##1 2
get##3 6
;##6 7
set##8 ;
;##; <
}##= >
public$$ 
DbSet$$ 
<$$ 

VentaAbono$$ 
>$$  
VentaAbonos$$! ,
{$$- .
get$$/ 2
;$$2 3
set$$4 7
;$$7 8
}$$9 :
public%% 
DbSet%% 
<%% 

Devolucion%% 
>%%  
Devoluciones%%! -
{%%. /
get%%0 3
;%%3 4
set%%5 8
;%%8 9
}%%: ;
public&& 
DbSet&& 
<&& 
DevolucionDetalle&& &
>&&& '
DevolucionDetalles&&( :
{&&; <
get&&= @
;&&@ A
set&&B E
;&&E F
}&&G H
public'' 
DbSet'' 
<'' 
Transaccion''  
>''  !
Transacciones''" /
{''0 1
get''2 5
;''5 6
set''7 :
;'': ;
}''< =
	protected)) 
override)) 
void)) 
OnModelCreating))  /
())/ 0
ModelBuilder))0 <
modelBuilder))= I
)))I J
{** 	
modelBuilder++ 
.++ 
Entity++ 
<++  
FabricacionDetalle++  2
>++2 3
(++3 4
)++4 5
.++5 6
HasKey,, 
(,, 
fb,, 
=>,, 
new,,  
{,,! "
fb,,# %
.,,% &
FabricacionId,,& 3
,,,3 4
fb,,5 7
.,,7 8
MateriaPrimaId,,8 F
},,F G
),,G H
;,,H I
modelBuilder.. 
... 
Entity.. 
<..  %
ProductoParaVenderDetalle..  9
>..9 :
(..: ;
)..; <
...< =
HasKey// 
(// 
ppvd// 
=>// 
new// "
{//# $
ppvd//% )
.//) * 
ProductoParaVenderId//* >
,//> ?
ppvd//@ D
.//D E"
ProductoParaFabricarId//E [
}//\ ]
)//] ^
;//^ _
modelBuilder11 
.11 
Entity11 
<11  
CompraDetalle11  -
>11- .
(11. /
)11/ 0
.110 1
HasKey22 
(22 
cd22 
=>22 
new22  
{22! "
cd22# %
.22% &

ProductoId22& 0
,220 1
cd222 4
.224 5
CompraId225 =
}22= >
)22> ?
;22? @
modelBuilder44 
.44 
Entity44 
<44  (
TerceroClientePrecioProducto44  <
>44< =
(44= >
)44> ?
.44? @
HasKey55 
(55 
cd55 
=>55 
new55  
{55! "
cd55# %
.55% &

ProductoId55& 0
,550 1
cd552 4
.554 5
	ClienteId555 >
}55> ?
)55? @
;55@ A
modelBuilder77 
.77 
Entity77 
<77  
VentaDetalle77  ,
>77, -
(77- .
)77. /
.77/ 0
HasKey88 
(88 
cd88 
=>88 
new88  
{88! "
cd88# %
.88% &

ProductoId88& 0
,880 1
cd882 4
.884 5
VentaId885 <
}88< =
)88= >
;88> ?
modelBuilder:: 
.:: 
Entity:: 
<::  
DevolucionDetalle::  1
>::1 2
(::2 3
)::3 4
.::4 5
HasKey;; 
(;; 
cd;; 
=>;; 
new;;  
{;;! "
cd;;# %
.;;% &

ProductoId;;& 0
,;;0 1
cd;;2 4
.;;4 5
DevolucionId;;5 A
};;A B
);;B C
;;;C D
}== 	
}>> 
}?? ²
cc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Migrations\20200807164915_Nueva.cs
	namespace 	
Infrastructure
 
. 

Migrations #
{ 
public 

partial 
class 
Nueva 
:  
	Migration! *
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
CreateTable

 (
(

( )
name 
: 
$str "
," #
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
nullable+ 3
:3 4
false5 :
): ;
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Nombre 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
nullable2 :
:: ;
true< @
)@ A
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 4
,4 5
x6 7
=>8 :
x; <
.< =
Id= ?
)? @
;@ A
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
nullable+ 3
:3 4
false5 :
): ;
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Nombre 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
nullable2 :
:: ;
true< @
)@ A
} 
, 
constraints 
: 
table "
=># %
{   
table!! 
.!! 

PrimaryKey!! $
(!!$ %
$str!!% /
,!!/ 0
x!!1 2
=>!!3 5
x!!6 7
.!!7 8
Id!!8 :
)!!: ;
;!!; <
}"" 
)"" 
;"" 
migrationBuilder$$ 
.$$ 
CreateTable$$ (
($$( )
name%% 
:%% 
$str%%  
,%%  !
columns&& 
:&& 
table&& 
=>&& !
new&&" %
{'' 
Id(( 
=(( 
table(( 
.(( 
Column(( %
<((% &
int((& )
>(() *
(((* +
nullable((+ 3
:((3 4
false((5 :
)((: ;
.)) 

Annotation)) #
())# $
$str))$ 8
,))8 9
$str)): @
)))@ A
,))A B
Nit** 
=** 
table** 
.**  
Column**  &
<**& '
string**' -
>**- .
(**. /
nullable**/ 7
:**7 8
true**9 =
)**= >
,**> ?
RazonSocial++ 
=++  !
table++" '
.++' (
Column++( .
<++. /
string++/ 5
>++5 6
(++6 7
nullable++7 ?
:++? @
true++A E
)++E F
,++F G
FechaCreacion,, !
=,," #
table,,$ )
.,,) *
Column,,* 0
<,,0 1
DateTime,,1 9
>,,9 :
(,,: ;
nullable,,; C
:,,C D
false,,E J
),,J K
}-- 
,-- 
constraints.. 
:.. 
table.. "
=>..# %
{// 
table00 
.00 

PrimaryKey00 $
(00$ %
$str00% 2
,002 3
x004 5
=>006 8
x009 :
.00: ;
Id00; =
)00= >
;00> ?
}11 
)11 
;11 
migrationBuilder33 
.33 
CreateTable33 (
(33( )
name44 
:44 
$str44 %
,44% &
columns55 
:55 
table55 
=>55 !
new55" %
{66 
Id77 
=77 
table77 
.77 
Column77 %
<77% &
int77& )
>77) *
(77* +
nullable77+ 3
:773 4
false775 :
)77: ;
.88 

Annotation88 #
(88# $
$str88$ 8
,888 9
$str88: @
)88@ A
,88A B
Nombre99 
=99 
table99 "
.99" #
Column99# )
<99) *
string99* 0
>990 1
(991 2
nullable992 :
:99: ;
true99< @
)99@ A
,99A B
ProductoCategoriaId:: '
=::( )
table::* /
.::/ 0
Column::0 6
<::6 7
int::7 :
>::: ;
(::; <
nullable::< D
:::D E
true::F J
)::J K
,::K L"
ProductoSubCategoriaId;; *
=;;+ ,
table;;- 2
.;;2 3
Column;;3 9
<;;9 :
int;;: =
>;;= >
(;;> ?
nullable;;? G
:;;G H
true;;I M
);;M N
}<< 
,<< 
constraints== 
:== 
table== "
=>==# %
{>> 
table?? 
.?? 

PrimaryKey?? $
(??$ %
$str??% 7
,??7 8
x??9 :
=>??; =
x??> ?
.??? @
Id??@ B
)??B C
;??C D
table@@ 
.@@ 

ForeignKey@@ $
(@@$ %
nameAA 
:AA 
$strAA O
,AAO P
columnBB 
:BB 
xBB  !
=>BB" $
xBB% &
.BB& '
ProductoCategoriaIdBB' :
,BB: ;
principalTableCC &
:CC& '
$strCC( 4
,CC4 5
principalColumnDD '
:DD' (
$strDD) -
,DD- .
onDeleteEE  
:EE  !
ReferentialActionEE" 3
.EE3 4
RestrictEE4 <
)EE< =
;EE= >
tableFF 
.FF 

ForeignKeyFF $
(FF$ %
nameGG 
:GG 
$strGG U
,GGU V
columnHH 
:HH 
xHH  !
=>HH" $
xHH% &
.HH& '"
ProductoSubCategoriaIdHH' =
,HH= >
principalTableII &
:II& '
$strII( 7
,II7 8
principalColumnJJ '
:JJ' (
$strJJ) -
,JJ- .
onDeleteKK  
:KK  !
ReferentialActionKK" 3
.KK3 4
RestrictKK4 <
)KK< =
;KK= >
}LL 
)LL 
;LL 
migrationBuilderNN 
.NN 
CreateTableNN (
(NN( )
nameOO 
:OO 
$strOO  
,OO  !
columnsPP 
:PP 
tablePP 
=>PP !
newPP" %
{QQ 
IdRR 
=RR 
tableRR 
.RR 
ColumnRR %
<RR% &
intRR& )
>RR) *
(RR* +
nullableRR+ 3
:RR3 4
falseRR5 :
)RR: ;
.SS 

AnnotationSS #
(SS# $
$strSS$ 8
,SS8 9
$strSS: @
)SS@ A
,SSA B
	DireccionTT 
=TT 
tableTT  %
.TT% &
ColumnTT& ,
<TT, -
stringTT- 3
>TT3 4
(TT4 5
nullableTT5 =
:TT= >
trueTT? C
)TTC D
,TTD E
NumeroCelularUU !
=UU" #
tableUU$ )
.UU) *
ColumnUU* 0
<UU0 1
stringUU1 7
>UU7 8
(UU8 9
nullableUU9 A
:UUA B
trueUUC G
)UUG H
,UUH I
EmailVV 
=VV 
tableVV !
.VV! "
ColumnVV" (
<VV( )
stringVV) /
>VV/ 0
(VV0 1
nullableVV1 9
:VV9 :
trueVV; ?
)VV? @
,VV@ A
	TerceroIdWW 
=WW 
tableWW  %
.WW% &
ColumnWW& ,
<WW, -
intWW- 0
>WW0 1
(WW1 2
nullableWW2 :
:WW: ;
trueWW< @
)WW@ A
}XX 
,XX 
constraintsYY 
:YY 
tableYY "
=>YY# %
{ZZ 
table[[ 
.[[ 

PrimaryKey[[ $
([[$ %
$str[[% 2
,[[2 3
x[[4 5
=>[[6 8
x[[9 :
.[[: ;
Id[[; =
)[[= >
;[[> ?
table\\ 
.\\ 

ForeignKey\\ $
(\\$ %
name]] 
:]] 
$str]] >
,]]> ?
column^^ 
:^^ 
x^^  !
=>^^" $
x^^% &
.^^& '
	TerceroId^^' 0
,^^0 1
principalTable__ &
:__& '
$str__( 2
,__2 3
principalColumn`` '
:``' (
$str``) -
,``- .
onDeleteaa  
:aa  !
ReferentialActionaa" 3
.aa3 4
Restrictaa4 <
)aa< =
;aa= >
}bb 
)bb 
;bb 
migrationBuilderdd 
.dd 
CreateTabledd (
(dd( )
nameee 
:ee 
$stree '
,ee' (
columnsff 
:ff 
tableff 
=>ff !
newff" %
{gg 
Idhh 
=hh 
tablehh 
.hh 
Columnhh %
<hh% &
inthh& )
>hh) *
(hh* +
nullablehh+ 3
:hh3 4
falsehh5 :
)hh: ;
.ii 

Annotationii #
(ii# $
$strii$ 8
,ii8 9
$strii: @
)ii@ A
,iiA B
	TerceroIdjj 
=jj 
tablejj  %
.jj% &
Columnjj& ,
<jj, -
intjj- 0
>jj0 1
(jj1 2
nullablejj2 :
:jj: ;
truejj< @
)jj@ A
,jjA B
FechaCreacionkk !
=kk" #
tablekk$ )
.kk) *
Columnkk* 0
<kk0 1
DateTimekk1 9
>kk9 :
(kk: ;
nullablekk; C
:kkC D
falsekkE J
)kkJ K
}ll 
,ll 
constraintsmm 
:mm 
tablemm "
=>mm# %
{nn 
tableoo 
.oo 

PrimaryKeyoo $
(oo$ %
$stroo% 9
,oo9 :
xoo; <
=>oo= ?
xoo@ A
.ooA B
IdooB D
)ooD E
;ooE F
tablepp 
.pp 

ForeignKeypp $
(pp$ %
nameqq 
:qq 
$strqq E
,qqE F
columnrr 
:rr 
xrr  !
=>rr" $
xrr% &
.rr& '
	TerceroIdrr' 0
,rr0 1
principalTabless &
:ss& '
$strss( 2
,ss2 3
principalColumntt '
:tt' (
$strtt) -
,tt- .
onDeleteuu  
:uu  !
ReferentialActionuu" 3
.uu3 4
Restrictuu4 <
)uu< =
;uu= >
}vv 
)vv 
;vv 
migrationBuilderxx 
.xx 
CreateTablexx (
(xx( )
nameyy 
:yy 
$stryy )
,yy) *
columnszz 
:zz 
tablezz 
=>zz !
newzz" %
{{{ 
Id|| 
=|| 
table|| 
.|| 
Column|| %
<||% &
int||& )
>||) *
(||* +
nullable||+ 3
:||3 4
false||5 :
)||: ;
.}} 

Annotation}} #
(}}# $
$str}}$ 8
,}}8 9
$str}}: @
)}}@ A
,}}A B
	TerceroId~~ 
=~~ 
table~~  %
.~~% &
Column~~& ,
<~~, -
int~~- 0
>~~0 1
(~~1 2
nullable~~2 :
:~~: ;
true~~< @
)~~@ A
,~~A B
FechaCreacion !
=" #
table$ )
.) *
Column* 0
<0 1
DateTime1 9
>9 :
(: ;
nullable; C
:C D
falseE J
)J K
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% ;
,
; <
x
= >
=>
? A
x
B C
.
C D
Id
D F
)
F G
;
G H
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 G
,
G H
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	TerceroId
' 0
,
0 1
principalTable
 &
:
& '
$str
( 2
,
2 3
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Restrict
4 <
)
< =
;
= >
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 +
,
+ ,
columns
 
:
 
table
 
=>
 !
new
" %
{
 
Id
 
=
 
table
 
.
 
Column
 %
<
% &
int
& )
>
) *
(
* +
nullable
+ 3
:
3 4
false
5 :
)
: ;
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
	TerceroId
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
nullable
2 :
:
: ;
true
< @
)
@ A
,
A B
FechaCreacion
 !
=
" #
table
$ )
.
) *
Column
* 0
<
0 1
DateTime
1 9
>
9 :
(
: ;
nullable
; C
:
C D
false
E J
)
J K
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% =
,
= >
x
? @
=>
A C
x
D E
.
E F
Id
F H
)
H I
;
I J
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 I
,
I J
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	TerceroId
' 0
,
0 1
principalTable
 &
:
& '
$str
( 2
,
2 3
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Restrict
4 <
)
< =
;
= >
}
 
)
 
;
 
migrationBuilder
   
.
   
CreateTable
   (
(
  ( )
name
¡¡ 
:
¡¡ 
$str
¡¡ (
,
¡¡( )
columns
¢¢ 
:
¢¢ 
table
¢¢ 
=>
¢¢ !
new
¢¢" %
{
££ 
Id
¤¤ 
=
¤¤ 
table
¤¤ 
.
¤¤ 
Column
¤¤ %
<
¤¤% &
int
¤¤& )
>
¤¤) *
(
¤¤* +
nullable
¤¤+ 3
:
¤¤3 4
false
¤¤5 :
)
¤¤: ;
.
¥¥ 

Annotation
¥¥ #
(
¥¥# $
$str
¥¥$ 8
,
¥¥8 9
$str
¥¥: @
)
¥¥@ A
,
¥¥A B
	TerceroId
¦¦ 
=
¦¦ 
table
¦¦  %
.
¦¦% &
Column
¦¦& ,
<
¦¦, -
int
¦¦- 0
>
¦¦0 1
(
¦¦1 2
nullable
¦¦2 :
:
¦¦: ;
true
¦¦< @
)
¦¦@ A
,
¦¦A B
FechaCreacion
§§ !
=
§§" #
table
§§$ )
.
§§) *
Column
§§* 0
<
§§0 1
DateTime
§§1 9
>
§§9 :
(
§§: ;
nullable
§§; C
:
§§C D
false
§§E J
)
§§J K
}
¨¨ 
,
¨¨ 
constraints
©© 
:
©© 
table
©© "
=>
©©# %
{
ªª 
table
«« 
.
«« 

PrimaryKey
«« $
(
««$ %
$str
««% :
,
««: ;
x
««< =
=>
««> @
x
««A B
.
««B C
Id
««C E
)
««E F
;
««F G
table
¬¬ 
.
¬¬ 

ForeignKey
¬¬ $
(
¬¬$ %
name
­­ 
:
­­ 
$str
­­ F
,
­­F G
column
®® 
:
®® 
x
®®  !
=>
®®" $
x
®®% &
.
®®& '
	TerceroId
®®' 0
,
®®0 1
principalTable
¯¯ &
:
¯¯& '
$str
¯¯( 2
,
¯¯2 3
principalColumn
°° '
:
°°' (
$str
°°) -
,
°°- .
onDelete
±±  
:
±±  !
ReferentialAction
±±" 3
.
±±3 4
Restrict
±±4 <
)
±±< =
;
±±= >
}
²² 
)
²² 
;
²² 
migrationBuilder
´´ 
.
´´ 
CreateTable
´´ (
(
´´( )
name
µµ 
:
µµ 
$str
µµ '
,
µµ' (
columns
¶¶ 
:
¶¶ 
table
¶¶ 
=>
¶¶ !
new
¶¶" %
{
·· 
Id
¸¸ 
=
¸¸ 
table
¸¸ 
.
¸¸ 
Column
¸¸ %
<
¸¸% &
int
¸¸& )
>
¸¸) *
(
¸¸* +
nullable
¸¸+ 3
:
¸¸3 4
false
¸¸5 :
)
¸¸: ;
.
¹¹ 

Annotation
¹¹ #
(
¹¹# $
$str
¹¹$ 8
,
¹¹8 9
$str
¹¹: @
)
¹¹@ A
,
¹¹A B
	TerceroId
ºº 
=
ºº 
table
ºº  %
.
ºº% &
Column
ºº& ,
<
ºº, -
int
ºº- 0
>
ºº0 1
(
ºº1 2
nullable
ºº2 :
:
ºº: ;
true
ºº< @
)
ºº@ A
,
ººA B
Usuario
»» 
=
»» 
table
»» #
.
»»# $
Column
»»$ *
<
»»* +
string
»»+ 1
>
»»1 2
(
»»2 3
nullable
»»3 ;
:
»»; <
true
»»= A
)
»»A B
,
»»B C
Password
¼¼ 
=
¼¼ 
table
¼¼ $
.
¼¼$ %
Column
¼¼% +
<
¼¼+ ,
string
¼¼, 2
>
¼¼2 3
(
¼¼3 4
nullable
¼¼4 <
:
¼¼< =
true
¼¼> B
)
¼¼B C
,
¼¼C D
RoleId
½½ 
=
½½ 
table
½½ "
.
½½" #
Column
½½# )
<
½½) *
int
½½* -
>
½½- .
(
½½. /
nullable
½½/ 7
:
½½7 8
true
½½9 =
)
½½= >
,
½½> ?
FechaCreacion
¾¾ !
=
¾¾" #
table
¾¾$ )
.
¾¾) *
Column
¾¾* 0
<
¾¾0 1
DateTime
¾¾1 9
>
¾¾9 :
(
¾¾: ;
nullable
¾¾; C
:
¾¾C D
false
¾¾E J
)
¾¾J K
}
¿¿ 
,
¿¿ 
constraints
ÀÀ 
:
ÀÀ 
table
ÀÀ "
=>
ÀÀ# %
{
ÁÁ 
table
ÂÂ 
.
ÂÂ 

PrimaryKey
ÂÂ $
(
ÂÂ$ %
$str
ÂÂ% 9
,
ÂÂ9 :
x
ÂÂ; <
=>
ÂÂ= ?
x
ÂÂ@ A
.
ÂÂA B
Id
ÂÂB D
)
ÂÂD E
;
ÂÂE F
table
ÃÃ 
.
ÃÃ 

ForeignKey
ÃÃ $
(
ÃÃ$ %
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ ?
,
ÄÄ? @
column
ÅÅ 
:
ÅÅ 
x
ÅÅ  !
=>
ÅÅ" $
x
ÅÅ% &
.
ÅÅ& '
RoleId
ÅÅ' -
,
ÅÅ- .
principalTable
ÆÆ &
:
ÆÆ& '
$str
ÆÆ( /
,
ÆÆ/ 0
principalColumn
ÇÇ '
:
ÇÇ' (
$str
ÇÇ) -
,
ÇÇ- .
onDelete
ÈÈ  
:
ÈÈ  !
ReferentialAction
ÈÈ" 3
.
ÈÈ3 4
Restrict
ÈÈ4 <
)
ÈÈ< =
;
ÈÈ= >
table
ÉÉ 
.
ÉÉ 

ForeignKey
ÉÉ $
(
ÉÉ$ %
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ E
,
ÊÊE F
column
ËË 
:
ËË 
x
ËË  !
=>
ËË" $
x
ËË% &
.
ËË& '
	TerceroId
ËË' 0
,
ËË0 1
principalTable
ÌÌ &
:
ÌÌ& '
$str
ÌÌ( 2
,
ÌÌ2 3
principalColumn
ÍÍ '
:
ÍÍ' (
$str
ÍÍ) -
,
ÍÍ- .
onDelete
ÎÎ  
:
ÎÎ  !
ReferentialAction
ÎÎ" 3
.
ÎÎ3 4
Restrict
ÎÎ4 <
)
ÎÎ< =
;
ÎÎ= >
}
ÏÏ 
)
ÏÏ 
;
ÏÏ 
migrationBuilder
ÑÑ 
.
ÑÑ 
CreateTable
ÑÑ (
(
ÑÑ( )
name
ÒÒ 
:
ÒÒ 
$str
ÒÒ  
,
ÒÒ  !
columns
ÓÓ 
:
ÓÓ 
table
ÓÓ 
=>
ÓÓ !
new
ÓÓ" %
{
ÔÔ 
Id
ÕÕ 
=
ÕÕ 
table
ÕÕ 
.
ÕÕ 
Column
ÕÕ %
<
ÕÕ% &
int
ÕÕ& )
>
ÕÕ) *
(
ÕÕ* +
nullable
ÕÕ+ 3
:
ÕÕ3 4
false
ÕÕ5 :
)
ÕÕ: ;
.
ÖÖ 

Annotation
ÖÖ #
(
ÖÖ# $
$str
ÖÖ$ 8
,
ÖÖ8 9
$str
ÖÖ: @
)
ÖÖ@ A
,
ÖÖA B
Nombre
×× 
=
×× 
table
×× "
.
××" #
Column
××# )
<
××) *
string
××* 0
>
××0 1
(
××1 2
nullable
××2 :
:
××: ;
true
××< @
)
××@ A
,
××A B
Cantidad
ØØ 
=
ØØ 
table
ØØ $
.
ØØ$ %
Column
ØØ% +
<
ØØ+ ,
double
ØØ, 2
>
ØØ2 3
(
ØØ3 4
nullable
ØØ4 <
:
ØØ< =
false
ØØ> C
)
ØØC D
,
ØØD E
CostoUnitario
ÙÙ !
=
ÙÙ" #
table
ÙÙ$ )
.
ÙÙ) *
Column
ÙÙ* 0
<
ÙÙ0 1
double
ÙÙ1 7
>
ÙÙ7 8
(
ÙÙ8 9
nullable
ÙÙ9 A
:
ÙÙA B
false
ÙÙC H
)
ÙÙH I
,
ÙÙI J
UnidadDeMedida
ÚÚ "
=
ÚÚ# $
table
ÚÚ% *
.
ÚÚ* +
Column
ÚÚ+ 1
<
ÚÚ1 2
int
ÚÚ2 5
>
ÚÚ5 6
(
ÚÚ6 7
nullable
ÚÚ7 ?
:
ÚÚ? @
false
ÚÚA F
)
ÚÚF G
,
ÚÚG H"
PorcentajeDeUtilidad
ÛÛ (
=
ÛÛ) *
table
ÛÛ+ 0
.
ÛÛ0 1
Column
ÛÛ1 7
<
ÛÛ7 8
double
ÛÛ8 >
>
ÛÛ> ?
(
ÛÛ? @
nullable
ÛÛ@ H
:
ÛÛH I
false
ÛÛJ O
)
ÛÛO P
,
ÛÛP Q
Especificacion
ÜÜ "
=
ÜÜ# $
table
ÜÜ% *
.
ÜÜ* +
Column
ÜÜ+ 1
<
ÜÜ1 2
int
ÜÜ2 5
>
ÜÜ5 6
(
ÜÜ6 7
nullable
ÜÜ7 ?
:
ÜÜ? @
false
ÜÜA F
)
ÜÜF G
,
ÜÜG H
Tipo
ÝÝ 
=
ÝÝ 
table
ÝÝ  
.
ÝÝ  !
Column
ÝÝ! '
<
ÝÝ' (
int
ÝÝ( +
>
ÝÝ+ ,
(
ÝÝ, -
nullable
ÝÝ- 5
:
ÝÝ5 6
false
ÝÝ7 <
)
ÝÝ< =
,
ÝÝ= >
EnvoltorioId
ÞÞ  
=
ÞÞ! "
table
ÞÞ# (
.
ÞÞ( )
Column
ÞÞ) /
<
ÞÞ/ 0
int
ÞÞ0 3
>
ÞÞ3 4
(
ÞÞ4 5
nullable
ÞÞ5 =
:
ÞÞ= >
true
ÞÞ? C
)
ÞÞC D
,
ÞÞD E
FechaCreacion
ßß !
=
ßß" #
table
ßß$ )
.
ßß) *
Column
ßß* 0
<
ßß0 1
DateTime
ßß1 9
>
ßß9 :
(
ßß: ;
nullable
ßß; C
:
ßßC D
false
ßßE J
)
ßßJ K
,
ßßK L
SubCategoriaId
àà "
=
àà# $
table
àà% *
.
àà* +
Column
àà+ 1
<
àà1 2
int
àà2 5
>
àà5 6
(
àà6 7
nullable
àà7 ?
:
àà? @
false
ààA F
)
ààF G
,
ààG H
Discriminator
áá !
=
áá" #
table
áá$ )
.
áá) *
Column
áá* 0
<
áá0 1
string
áá1 7
>
áá7 8
(
áá8 9
nullable
áá9 A
:
ááA B
false
ááC H
)
ááH I
,
ááI J"
TerceroPropietarioId
ââ (
=
ââ) *
table
ââ+ 0
.
ââ0 1
Column
ââ1 7
<
ââ7 8
int
ââ8 ;
>
ââ; <
(
ââ< =
nullable
ââ= E
:
ââE F
true
ââG K
)
ââK L
}
ãã 
,
ãã 
constraints
ää 
:
ää 
table
ää "
=>
ää# %
{
åå 
table
ææ 
.
ææ 

PrimaryKey
ææ $
(
ææ$ %
$str
ææ% 2
,
ææ2 3
x
ææ4 5
=>
ææ6 8
x
ææ9 :
.
ææ: ;
Id
ææ; =
)
ææ= >
;
ææ> ?
table
çç 
.
çç 

ForeignKey
çç $
(
çç$ %
name
èè 
:
èè 
$str
èè A
,
èèA B
column
éé 
:
éé 
x
éé  !
=>
éé" $
x
éé% &
.
éé& '
EnvoltorioId
éé' 3
,
éé3 4
principalTable
êê &
:
êê& '
$str
êê( 2
,
êê2 3
principalColumn
ëë '
:
ëë' (
$str
ëë) -
,
ëë- .
onDelete
ìì  
:
ìì  !
ReferentialAction
ìì" 3
.
ìì3 4
Restrict
ìì4 <
)
ìì< =
;
ìì= >
table
íí 
.
íí 

ForeignKey
íí $
(
íí$ %
name
îî 
:
îî 
$str
îî H
,
îîH I
column
ïï 
:
ïï 
x
ïï  !
=>
ïï" $
x
ïï% &
.
ïï& '
SubCategoriaId
ïï' 5
,
ïï5 6
principalTable
ðð &
:
ðð& '
$str
ðð( 7
,
ðð7 8
principalColumn
ññ '
:
ññ' (
$str
ññ) -
,
ññ- .
onDelete
òò  
:
òò  !
ReferentialAction
òò" 3
.
òò3 4
Cascade
òò4 ;
)
òò; <
;
òò< =
table
óó 
.
óó 

ForeignKey
óó $
(
óó$ %
name
ôô 
:
ôô 
$str
ôô T
,
ôôT U
column
õõ 
:
õõ 
x
õõ  !
=>
õõ" $
x
õõ% &
.
õõ& '"
TerceroPropietarioId
õõ' ;
,
õõ; <
principalTable
öö &
:
öö& '
$str
öö( =
,
öö= >
principalColumn
÷÷ '
:
÷÷' (
$str
÷÷) -
,
÷÷- .
onDelete
øø  
:
øø  !
ReferentialAction
øø" 3
.
øø3 4
Restrict
øø4 <
)
øø< =
;
øø= >
}
ùù 
)
ùù 
;
ùù 
migrationBuilder
ûû 
.
ûû 
CreateTable
ûû (
(
ûû( )
name
üü 
:
üü 
$str
üü 
,
üü  
columns
ýý 
:
ýý 
table
ýý 
=>
ýý !
new
ýý" %
{
þþ 
Id
ÿÿ 
=
ÿÿ 
table
ÿÿ 
.
ÿÿ 
Column
ÿÿ %
<
ÿÿ% &
int
ÿÿ& )
>
ÿÿ) *
(
ÿÿ* +
nullable
ÿÿ+ 3
:
ÿÿ3 4
false
ÿÿ5 :
)
ÿÿ: ;
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
Total
 
=
 
table
 !
.
! "
Column
" (
<
( )
double
) /
>
/ 0
(
0 1
nullable
1 9
:
9 :
false
; @
)
@ A
,
A B
ProveedorId
 
=
  !
table
" '
.
' (
Column
( .
<
. /
int
/ 2
>
2 3
(
3 4
nullable
4 <
:
< =
true
> B
)
B C
,
C D
	UsuarioId
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
nullable
2 :
:
: ;
true
< @
)
@ A
,
A B
Fecha
 
=
 
table
 !
.
! "
Column
" (
<
( )
DateTime
) 1
>
1 2
(
2 3
nullable
3 ;
:
; <
false
= B
)
B C
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 1
,
1 2
x
3 4
=>
5 7
x
8 9
.
9 :
Id
: <
)
< =
;
= >
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 G
,
G H
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
ProveedorId
' 2
,
2 3
principalTable
 &
:
& '
$str
( :
,
: ;
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Restrict
4 <
)
< =
;
= >
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 D
,
D E
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	UsuarioId
' 0
,
0 1
principalTable
 &
:
& '
$str
( 9
,
9 :
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Restrict
4 <
)
< =
;
= >
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 
,
 
columns
 
:
 
table
 
=>
 !
new
" %
{
 
Id
 
=
 
table
 
.
 
Column
 %
<
% &
int
& )
>
) *
(
* +
nullable
+ 3
:
3 4
false
5 :
)
: ;
.
 

Annotation
 #
(
# $
$str
$ 8
,
8 9
$str
: @
)
@ A
,
A B
	UsuarioId
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
nullable
2 :
:
: ;
true
< @
)
@ A
,
A B
	ClienteId
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
nullable
2 :
:
: ;
true
< @
)
@ A
,
A B
Total
 
=
 
table
 !
.
! "
Column
" (
<
( )
double
) /
>
/ 0
(
0 1
nullable
1 9
:
9 :
false
; @
)
@ A
,
A B
	Pendiente
   
=
   
table
    %
.
  % &
Column
  & ,
<
  , -
double
  - 3
>
  3 4
(
  4 5
nullable
  5 =
:
  = >
false
  ? D
)
  D E
,
  E F
Pagado
¡¡ 
=
¡¡ 
table
¡¡ "
.
¡¡" #
Column
¡¡# )
<
¡¡) *
double
¡¡* 0
>
¡¡0 1
(
¡¡1 2
nullable
¡¡2 :
:
¡¡: ;
false
¡¡< A
)
¡¡A B
,
¡¡B C
	Descuento
¢¢ 
=
¢¢ 
table
¢¢  %
.
¢¢% &
Column
¢¢& ,
<
¢¢, -
double
¢¢- 3
>
¢¢3 4
(
¢¢4 5
nullable
¢¢5 =
:
¢¢= >
false
¢¢? D
)
¢¢D E
,
¢¢E F
	TotalReal
££ 
=
££ 
table
££  %
.
££% &
Column
££& ,
<
££, -
double
££- 3
>
££3 4
(
££4 5
nullable
££5 =
:
££= >
false
££? D
)
££D E
,
££E F
Utilidad
¤¤ 
=
¤¤ 
table
¤¤ $
.
¤¤$ %
Column
¤¤% +
<
¤¤+ ,
double
¤¤, 2
>
¤¤2 3
(
¤¤3 4
nullable
¤¤4 <
:
¤¤< =
false
¤¤> C
)
¤¤C D
,
¤¤D E
Estado
¥¥ 
=
¥¥ 
table
¥¥ "
.
¥¥" #
Column
¥¥# )
<
¥¥) *
int
¥¥* -
>
¥¥- .
(
¥¥. /
nullable
¥¥/ 7
:
¥¥7 8
false
¥¥9 >
)
¥¥> ?
,
¥¥? @
Fecha
¦¦ 
=
¦¦ 
table
¦¦ !
.
¦¦! "
Column
¦¦" (
<
¦¦( )
DateTime
¦¦) 1
>
¦¦1 2
(
¦¦2 3
nullable
¦¦3 ;
:
¦¦; <
false
¦¦= B
)
¦¦B C
}
§§ 
,
§§ 
constraints
¨¨ 
:
¨¨ 
table
¨¨ "
=>
¨¨# %
{
©© 
table
ªª 
.
ªª 

PrimaryKey
ªª $
(
ªª$ %
$str
ªª% 0
,
ªª0 1
x
ªª2 3
=>
ªª4 6
x
ªª7 8
.
ªª8 9
Id
ªª9 ;
)
ªª; <
;
ªª< =
table
«« 
.
«« 

ForeignKey
«« $
(
««$ %
name
¬¬ 
:
¬¬ 
$str
¬¬ C
,
¬¬C D
column
­­ 
:
­­ 
x
­­  !
=>
­­" $
x
­­% &
.
­­& '
	ClienteId
­­' 0
,
­­0 1
principalTable
®® &
:
®®& '
$str
®®( 9
,
®®9 :
principalColumn
¯¯ '
:
¯¯' (
$str
¯¯) -
,
¯¯- .
onDelete
°°  
:
°°  !
ReferentialAction
°°" 3
.
°°3 4
Restrict
°°4 <
)
°°< =
;
°°= >
table
±± 
.
±± 

ForeignKey
±± $
(
±±$ %
name
²² 
:
²² 
$str
²² C
,
²²C D
column
³³ 
:
³³ 
x
³³  !
=>
³³" $
x
³³% &
.
³³& '
	UsuarioId
³³' 0
,
³³0 1
principalTable
´´ &
:
´´& '
$str
´´( 9
,
´´9 :
principalColumn
µµ '
:
µµ' (
$str
µµ) -
,
µµ- .
onDelete
¶¶  
:
¶¶  !
ReferentialAction
¶¶" 3
.
¶¶3 4
Restrict
¶¶4 <
)
¶¶< =
;
¶¶= >
}
·· 
)
·· 
;
·· 
migrationBuilder
¹¹ 
.
¹¹ 
CreateTable
¹¹ (
(
¹¹( )
name
ºº 
:
ºº 
$str
ºº %
,
ºº% &
columns
»» 
:
»» 
table
»» 
=>
»» !
new
»»" %
{
¼¼ 
Id
½½ 
=
½½ 
table
½½ 
.
½½ 
Column
½½ %
<
½½% &
int
½½& )
>
½½) *
(
½½* +
nullable
½½+ 3
:
½½3 4
false
½½5 :
)
½½: ;
.
¾¾ 

Annotation
¾¾ #
(
¾¾# $
$str
¾¾$ 8
,
¾¾8 9
$str
¾¾: @
)
¾¾@ A
,
¾¾A B
TerceroEmpleadoId
¿¿ %
=
¿¿& '
table
¿¿( -
.
¿¿- .
Column
¿¿. 4
<
¿¿4 5
int
¿¿5 8
>
¿¿8 9
(
¿¿9 :
nullable
¿¿: B
:
¿¿B C
true
¿¿D H
)
¿¿H I
,
¿¿I J
Cantidad
ÀÀ 
=
ÀÀ 
table
ÀÀ $
.
ÀÀ$ %
Column
ÀÀ% +
<
ÀÀ+ ,
double
ÀÀ, 2
>
ÀÀ2 3
(
ÀÀ3 4
nullable
ÀÀ4 <
:
ÀÀ< =
false
ÀÀ> C
)
ÀÀC D
,
ÀÀD E
Costo
ÁÁ 
=
ÁÁ 
table
ÁÁ !
.
ÁÁ! "
Column
ÁÁ" (
<
ÁÁ( )
double
ÁÁ) /
>
ÁÁ/ 0
(
ÁÁ0 1
nullable
ÁÁ1 9
:
ÁÁ9 :
false
ÁÁ; @
)
ÁÁ@ A
,
ÁÁA B
FechaCreacion
ÂÂ !
=
ÂÂ" #
table
ÂÂ$ )
.
ÂÂ) *
Column
ÂÂ* 0
<
ÂÂ0 1
DateTime
ÂÂ1 9
>
ÂÂ9 :
(
ÂÂ: ;
nullable
ÂÂ; C
:
ÂÂC D
false
ÂÂE J
)
ÂÂJ K
,
ÂÂK L

ProductoId
ÃÃ 
=
ÃÃ  
table
ÃÃ! &
.
ÃÃ& '
Column
ÃÃ' -
<
ÃÃ- .
int
ÃÃ. 1
>
ÃÃ1 2
(
ÃÃ2 3
nullable
ÃÃ3 ;
:
ÃÃ; <
true
ÃÃ= A
)
ÃÃA B
}
ÄÄ 
,
ÄÄ 
constraints
ÅÅ 
:
ÅÅ 
table
ÅÅ "
=>
ÅÅ# %
{
ÆÆ 
table
ÇÇ 
.
ÇÇ 

PrimaryKey
ÇÇ $
(
ÇÇ$ %
$str
ÇÇ% 7
,
ÇÇ7 8
x
ÇÇ9 :
=>
ÇÇ; =
x
ÇÇ> ?
.
ÇÇ? @
Id
ÇÇ@ B
)
ÇÇB C
;
ÇÇC D
table
ÈÈ 
.
ÈÈ 

ForeignKey
ÈÈ $
(
ÈÈ$ %
name
ÉÉ 
:
ÉÉ 
$str
ÉÉ D
,
ÉÉD E
column
ÊÊ 
:
ÊÊ 
x
ÊÊ  !
=>
ÊÊ" $
x
ÊÊ% &
.
ÊÊ& '

ProductoId
ÊÊ' 1
,
ÊÊ1 2
principalTable
ËË &
:
ËË& '
$str
ËË( 2
,
ËË2 3
principalColumn
ÌÌ '
:
ÌÌ' (
$str
ÌÌ) -
,
ÌÌ- .
onDelete
ÍÍ  
:
ÍÍ  !
ReferentialAction
ÍÍ" 3
.
ÍÍ3 4
Restrict
ÍÍ4 <
)
ÍÍ< =
;
ÍÍ= >
table
ÎÎ 
.
ÎÎ 

ForeignKey
ÎÎ $
(
ÎÎ$ %
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ T
,
ÏÏT U
column
ÐÐ 
:
ÐÐ 
x
ÐÐ  !
=>
ÐÐ" $
x
ÐÐ% &
.
ÐÐ& '
TerceroEmpleadoId
ÐÐ' 8
,
ÐÐ8 9
principalTable
ÑÑ &
:
ÑÑ& '
$str
ÑÑ( ;
,
ÑÑ; <
principalColumn
ÒÒ '
:
ÒÒ' (
$str
ÒÒ) -
,
ÒÒ- .
onDelete
ÓÓ  
:
ÓÓ  !
ReferentialAction
ÓÓ" 3
.
ÓÓ3 4
Restrict
ÓÓ4 <
)
ÓÓ< =
;
ÓÓ= >
}
ÔÔ 
)
ÔÔ 
;
ÔÔ 
migrationBuilder
ÖÖ 
.
ÖÖ 
CreateTable
ÖÖ (
(
ÖÖ( )
name
×× 
:
×× 
$str
×× 3
,
××3 4
columns
ØØ 
:
ØØ 
table
ØØ 
=>
ØØ !
new
ØØ" %
{
ÙÙ $
ProductoParaFabricarId
ÚÚ *
=
ÚÚ+ ,
table
ÚÚ- 2
.
ÚÚ2 3
Column
ÚÚ3 9
<
ÚÚ9 :
int
ÚÚ: =
>
ÚÚ= >
(
ÚÚ> ?
nullable
ÚÚ? G
:
ÚÚG H
false
ÚÚI N
)
ÚÚN O
,
ÚÚO P"
ProductoParaVenderId
ÛÛ (
=
ÛÛ) *
table
ÛÛ+ 0
.
ÛÛ0 1
Column
ÛÛ1 7
<
ÛÛ7 8
int
ÛÛ8 ;
>
ÛÛ; <
(
ÛÛ< =
nullable
ÛÛ= E
:
ÛÛE F
false
ÛÛG L
)
ÛÛL M
,
ÛÛM N
Id
ÜÜ 
=
ÜÜ 
table
ÜÜ 
.
ÜÜ 
Column
ÜÜ %
<
ÜÜ% &
int
ÜÜ& )
>
ÜÜ) *
(
ÜÜ* +
nullable
ÜÜ+ 3
:
ÜÜ3 4
false
ÜÜ5 :
)
ÜÜ: ;
,
ÜÜ; <
Cantidad
ÝÝ 
=
ÝÝ 
table
ÝÝ $
.
ÝÝ$ %
Column
ÝÝ% +
<
ÝÝ+ ,
double
ÝÝ, 2
>
ÝÝ2 3
(
ÝÝ3 4
nullable
ÝÝ4 <
:
ÝÝ< =
false
ÝÝ> C
)
ÝÝC D
,
ÝÝD E
Costo
ÞÞ 
=
ÞÞ 
table
ÞÞ !
.
ÞÞ! "
Column
ÞÞ" (
<
ÞÞ( )
double
ÞÞ) /
>
ÞÞ/ 0
(
ÞÞ0 1
nullable
ÞÞ1 9
:
ÞÞ9 :
false
ÞÞ; @
)
ÞÞ@ A
,
ÞÞA B$
ProductoMateriaPrimaId
ßß *
=
ßß+ ,
table
ßß- 2
.
ßß2 3
Column
ßß3 9
<
ßß9 :
int
ßß: =
>
ßß= >
(
ßß> ?
nullable
ßß? G
:
ßßG H
true
ßßI M
)
ßßM N
}
àà 
,
àà 
constraints
áá 
:
áá 
table
áá "
=>
áá# %
{
ââ 
table
ãã 
.
ãã 

PrimaryKey
ãã $
(
ãã$ %
$str
ãã% E
,
ããE F
x
ããG H
=>
ããI K
new
ããL O
{
ããP Q
x
ããR S
.
ããS T"
ProductoParaVenderId
ããT h
,
ããh i
x
ããj k
.
ããk l%
ProductoParaFabricarIdããl 
}ãã 
)ãã 
;ãã 
table
ää 
.
ää 

ForeignKey
ää $
(
ää$ %
name
åå 
:
åå 
$str
åå ^
,
åå^ _
column
ææ 
:
ææ 
x
ææ  !
=>
ææ" $
x
ææ% &
.
ææ& '$
ProductoMateriaPrimaId
ææ' =
,
ææ= >
principalTable
çç &
:
çç& '
$str
çç( 2
,
çç2 3
principalColumn
èè '
:
èè' (
$str
èè) -
,
èè- .
onDelete
éé  
:
éé  !
ReferentialAction
éé" 3
.
éé3 4
Restrict
éé4 <
)
éé< =
;
éé= >
table
êê 
.
êê 

ForeignKey
êê $
(
êê$ %
name
ëë 
:
ëë 
$str
ëë ^
,
ëë^ _
column
ìì 
:
ìì 
x
ìì  !
=>
ìì" $
x
ìì% &
.
ìì& '$
ProductoParaFabricarId
ìì' =
,
ìì= >
principalTable
íí &
:
íí& '
$str
íí( 2
,
íí2 3
principalColumn
îî '
:
îî' (
$str
îî) -
,
îî- .
onDelete
ïï  
:
ïï  !
ReferentialAction
ïï" 3
.
ïï3 4
Cascade
ïï4 ;
)
ïï; <
;
ïï< =
table
ðð 
.
ðð 

ForeignKey
ðð $
(
ðð$ %
name
ññ 
:
ññ 
$str
ññ \
,
ññ\ ]
column
òò 
:
òò 
x
òò  !
=>
òò" $
x
òò% &
.
òò& '"
ProductoParaVenderId
òò' ;
,
òò; <
principalTable
óó &
:
óó& '
$str
óó( 2
,
óó2 3
principalColumn
ôô '
:
ôô' (
$str
ôô) -
,
ôô- .
onDelete
õõ  
:
õõ  !
ReferentialAction
õõ" 3
.
õõ3 4
NoAction
õõ4 <
)
õõ< =
;
õõ= >
}
öö 
)
öö 
;
öö 
migrationBuilder
øø 
.
øø 
CreateTable
øø (
(
øø( )
name
ùù 
:
ùù 
$str
ùù -
,
ùù- .
columns
úú 
:
úú 
table
úú 
=>
úú !
new
úú" %
{
ûû 
	ClienteId
üü 
=
üü 
table
üü  %
.
üü% &
Column
üü& ,
<
üü, -
int
üü- 0
>
üü0 1
(
üü1 2
nullable
üü2 :
:
üü: ;
false
üü< A
)
üüA B
,
üüB C

ProductoId
ýý 
=
ýý  
table
ýý! &
.
ýý& '
Column
ýý' -
<
ýý- .
int
ýý. 1
>
ýý1 2
(
ýý2 3
nullable
ýý3 ;
:
ýý; <
false
ýý= B
)
ýýB C
,
ýýC D
Id
þþ 
=
þþ 
table
þþ 
.
þþ 
Column
þþ %
<
þþ% &
int
þþ& )
>
þþ) *
(
þþ* +
nullable
þþ+ 3
:
þþ3 4
false
þþ5 :
)
þþ: ;
,
þþ; <
Precio
ÿÿ 
=
ÿÿ 
table
ÿÿ "
.
ÿÿ" #
Column
ÿÿ# )
<
ÿÿ) *
double
ÿÿ* 0
>
ÿÿ0 1
(
ÿÿ1 2
nullable
ÿÿ2 :
:
ÿÿ: ;
false
ÿÿ< A
)
ÿÿA B
,
ÿÿB C
Costo
 
=
 
table
 !
.
! "
Column
" (
<
( )
double
) /
>
/ 0
(
0 1
nullable
1 9
:
9 :
false
; @
)
@ A
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% ?
,
? @
x
A B
=>
C E
new
F I
{
J K
x
L M
.
M N

ProductoId
N X
,
X Y
x
Z [
.
[ \
	ClienteId
\ e
}
f g
)
g h
;
h i
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 R
,
R S
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	ClienteId
' 0
,
0 1
principalTable
 &
:
& '
$str
( 9
,
9 :
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 L
,
L M
column
 
:
 
x
  !
=>
" $
x
% &
.
& '

ProductoId
' 1
,
1 2
principalTable
 &
:
& '
$str
( 2
,
2 3
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 &
,
& '
columns
 
:
 
table
 
=>
 !
new
" %
{
 
CompraId
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
int
, /
>
/ 0
(
0 1
nullable
1 9
:
9 :
false
; @
)
@ A
,
A B

ProductoId
 
=
  
table
! &
.
& '
Column
' -
<
- .
int
. 1
>
1 2
(
2 3
nullable
3 ;
:
; <
false
= B
)
B C
,
C D
Valor
 
=
 
table
 !
.
! "
Column
" (
<
( )
double
) /
>
/ 0
(
0 1
nullable
1 9
:
9 :
false
; @
)
@ A
,
A B
Cantidad
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
double
, 2
>
2 3
(
3 4
nullable
4 <
:
< =
false
> C
)
C D
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 8
,
8 9
x
: ;
=>
< >
new
? B
{
C D
x
E F
.
F G

ProductoId
G Q
,
Q R
x
S T
.
T U
CompraId
U ]
}
^ _
)
_ `
;
` a
table
 
.
 

ForeignKey
 $
(
$ %
name
   
:
   
$str
   B
,
  B C
column
¡¡ 
:
¡¡ 
x
¡¡  !
=>
¡¡" $
x
¡¡% &
.
¡¡& '
CompraId
¡¡' /
,
¡¡/ 0
principalTable
¢¢ &
:
¢¢& '
$str
¢¢( 1
,
¢¢1 2
principalColumn
££ '
:
££' (
$str
££) -
,
££- .
onDelete
¤¤  
:
¤¤  !
ReferentialAction
¤¤" 3
.
¤¤3 4
Cascade
¤¤4 ;
)
¤¤; <
;
¤¤< =
table
¥¥ 
.
¥¥ 

ForeignKey
¥¥ $
(
¥¥$ %
name
¦¦ 
:
¦¦ 
$str
¦¦ E
,
¦¦E F
column
§§ 
:
§§ 
x
§§  !
=>
§§" $
x
§§% &
.
§§& '

ProductoId
§§' 1
,
§§1 2
principalTable
¨¨ &
:
¨¨& '
$str
¨¨( 2
,
¨¨2 3
principalColumn
©© '
:
©©' (
$str
©©) -
,
©©- .
onDelete
ªª  
:
ªª  !
ReferentialAction
ªª" 3
.
ªª3 4
Cascade
ªª4 ;
)
ªª; <
;
ªª< =
}
«« 
)
«« 
;
«« 
migrationBuilder
­­ 
.
­­ 
CreateTable
­­ (
(
­­( )
name
®® 
:
®® 
$str
®® $
,
®®$ %
columns
¯¯ 
:
¯¯ 
table
¯¯ 
=>
¯¯ !
new
¯¯" %
{
°° 
Id
±± 
=
±± 
table
±± 
.
±± 
Column
±± %
<
±±% &
int
±±& )
>
±±) *
(
±±* +
nullable
±±+ 3
:
±±3 4
false
±±5 :
)
±±: ;
.
²² 

Annotation
²² #
(
²²# $
$str
²²$ 8
,
²²8 9
$str
²²: @
)
²²@ A
,
²²A B
	ClienteId
³³ 
=
³³ 
table
³³  %
.
³³% &
Column
³³& ,
<
³³, -
int
³³- 0
>
³³0 1
(
³³1 2
nullable
³³2 :
:
³³: ;
true
³³< @
)
³³@ A
,
³³A B
	UsuarioId
´´ 
=
´´ 
table
´´  %
.
´´% &
Column
´´& ,
<
´´, -
int
´´- 0
>
´´0 1
(
´´1 2
nullable
´´2 :
:
´´: ;
true
´´< @
)
´´@ A
,
´´A B
Total
µµ 
=
µµ 
table
µµ !
.
µµ! "
Column
µµ" (
<
µµ( )
double
µµ) /
>
µµ/ 0
(
µµ0 1
nullable
µµ1 9
:
µµ9 :
false
µµ; @
)
µµ@ A
,
µµA B
VentaId
¶¶ 
=
¶¶ 
table
¶¶ #
.
¶¶# $
Column
¶¶$ *
<
¶¶* +
int
¶¶+ .
>
¶¶. /
(
¶¶/ 0
nullable
¶¶0 8
:
¶¶8 9
true
¶¶: >
)
¶¶> ?
}
·· 
,
·· 
constraints
¸¸ 
:
¸¸ 
table
¸¸ "
=>
¸¸# %
{
¹¹ 
table
ºº 
.
ºº 

PrimaryKey
ºº $
(
ºº$ %
$str
ºº% 6
,
ºº6 7
x
ºº8 9
=>
ºº: <
x
ºº= >
.
ºº> ?
Id
ºº? A
)
ººA B
;
ººB C
table
»» 
.
»» 

ForeignKey
»» $
(
»»$ %
name
¼¼ 
:
¼¼ 
$str
¼¼ I
,
¼¼I J
column
½½ 
:
½½ 
x
½½  !
=>
½½" $
x
½½% &
.
½½& '
	ClienteId
½½' 0
,
½½0 1
principalTable
¾¾ &
:
¾¾& '
$str
¾¾( 9
,
¾¾9 :
principalColumn
¿¿ '
:
¿¿' (
$str
¿¿) -
,
¿¿- .
onDelete
ÀÀ  
:
ÀÀ  !
ReferentialAction
ÀÀ" 3
.
ÀÀ3 4
Restrict
ÀÀ4 <
)
ÀÀ< =
;
ÀÀ= >
table
ÁÁ 
.
ÁÁ 

ForeignKey
ÁÁ $
(
ÁÁ$ %
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ I
,
ÂÂI J
column
ÃÃ 
:
ÃÃ 
x
ÃÃ  !
=>
ÃÃ" $
x
ÃÃ% &
.
ÃÃ& '
	UsuarioId
ÃÃ' 0
,
ÃÃ0 1
principalTable
ÄÄ &
:
ÄÄ& '
$str
ÄÄ( 9
,
ÄÄ9 :
principalColumn
ÅÅ '
:
ÅÅ' (
$str
ÅÅ) -
,
ÅÅ- .
onDelete
ÆÆ  
:
ÆÆ  !
ReferentialAction
ÆÆ" 3
.
ÆÆ3 4
Restrict
ÆÆ4 <
)
ÆÆ< =
;
ÆÆ= >
table
ÇÇ 
.
ÇÇ 

ForeignKey
ÇÇ $
(
ÇÇ$ %
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ >
,
ÈÈ> ?
column
ÉÉ 
:
ÉÉ 
x
ÉÉ  !
=>
ÉÉ" $
x
ÉÉ% &
.
ÉÉ& '
VentaId
ÉÉ' .
,
ÉÉ. /
principalTable
ÊÊ &
:
ÊÊ& '
$str
ÊÊ( 0
,
ÊÊ0 1
principalColumn
ËË '
:
ËË' (
$str
ËË) -
,
ËË- .
onDelete
ÌÌ  
:
ÌÌ  !
ReferentialAction
ÌÌ" 3
.
ÌÌ3 4
Restrict
ÌÌ4 <
)
ÌÌ< =
;
ÌÌ= >
}
ÍÍ 
)
ÍÍ 
;
ÍÍ 
migrationBuilder
ÏÏ 
.
ÏÏ 
CreateTable
ÏÏ (
(
ÏÏ( )
name
ÐÐ 
:
ÐÐ 
$str
ÐÐ #
,
ÐÐ# $
columns
ÑÑ 
:
ÑÑ 
table
ÑÑ 
=>
ÑÑ !
new
ÑÑ" %
{
ÒÒ 
Id
ÓÓ 
=
ÓÓ 
table
ÓÓ 
.
ÓÓ 
Column
ÓÓ %
<
ÓÓ% &
int
ÓÓ& )
>
ÓÓ) *
(
ÓÓ* +
nullable
ÓÓ+ 3
:
ÓÓ3 4
false
ÓÓ5 :
)
ÓÓ: ;
.
ÔÔ 

Annotation
ÔÔ #
(
ÔÔ# $
$str
ÔÔ$ 8
,
ÔÔ8 9
$str
ÔÔ: @
)
ÔÔ@ A
,
ÔÔA B
Valor
ÕÕ 
=
ÕÕ 
table
ÕÕ !
.
ÕÕ! "
Column
ÕÕ" (
<
ÕÕ( )
double
ÕÕ) /
>
ÕÕ/ 0
(
ÕÕ0 1
nullable
ÕÕ1 9
:
ÕÕ9 :
false
ÕÕ; @
)
ÕÕ@ A
,
ÕÕA B
VentaId
ÖÖ 
=
ÖÖ 
table
ÖÖ #
.
ÖÖ# $
Column
ÖÖ$ *
<
ÖÖ* +
int
ÖÖ+ .
>
ÖÖ. /
(
ÖÖ/ 0
nullable
ÖÖ0 8
:
ÖÖ8 9
true
ÖÖ: >
)
ÖÖ> ?
,
ÖÖ? @

FechaAbono
×× 
=
××  
table
××! &
.
××& '
Column
××' -
<
××- .
DateTime
××. 6
>
××6 7
(
××7 8
nullable
××8 @
:
××@ A
false
××B G
)
××G H
}
ØØ 
,
ØØ 
constraints
ÙÙ 
:
ÙÙ 
table
ÙÙ "
=>
ÙÙ# %
{
ÚÚ 
table
ÛÛ 
.
ÛÛ 

PrimaryKey
ÛÛ $
(
ÛÛ$ %
$str
ÛÛ% 5
,
ÛÛ5 6
x
ÛÛ7 8
=>
ÛÛ9 ;
x
ÛÛ< =
.
ÛÛ= >
Id
ÛÛ> @
)
ÛÛ@ A
;
ÛÛA B
table
ÜÜ 
.
ÜÜ 

ForeignKey
ÜÜ $
(
ÜÜ$ %
name
ÝÝ 
:
ÝÝ 
$str
ÝÝ =
,
ÝÝ= >
column
ÞÞ 
:
ÞÞ 
x
ÞÞ  !
=>
ÞÞ" $
x
ÞÞ% &
.
ÞÞ& '
VentaId
ÞÞ' .
,
ÞÞ. /
principalTable
ßß &
:
ßß& '
$str
ßß( 0
,
ßß0 1
principalColumn
àà '
:
àà' (
$str
àà) -
,
àà- .
onDelete
áá  
:
áá  !
ReferentialAction
áá" 3
.
áá3 4
Restrict
áá4 <
)
áá< =
;
áá= >
}
ââ 
)
ââ 
;
ââ 
migrationBuilder
ää 
.
ää 
CreateTable
ää (
(
ää( )
name
åå 
:
åå 
$str
åå %
,
åå% &
columns
ææ 
:
ææ 
table
ææ 
=>
ææ !
new
ææ" %
{
çç 
VentaId
èè 
=
èè 
table
èè #
.
èè# $
Column
èè$ *
<
èè* +
int
èè+ .
>
èè. /
(
èè/ 0
nullable
èè0 8
:
èè8 9
false
èè: ?
)
èè? @
,
èè@ A

ProductoId
éé 
=
éé  
table
éé! &
.
éé& '
Column
éé' -
<
éé- .
int
éé. 1
>
éé1 2
(
éé2 3
nullable
éé3 ;
:
éé; <
false
éé= B
)
ééB C
,
ééC D
Cantidad
êê 
=
êê 
table
êê $
.
êê$ %
Column
êê% +
<
êê+ ,
double
êê, 2
>
êê2 3
(
êê3 4
nullable
êê4 <
:
êê< =
false
êê> C
)
êêC D
,
êêD E
PrecioUnitario
ëë "
=
ëë# $
table
ëë% *
.
ëë* +
Column
ëë+ 1
<
ëë1 2
double
ëë2 8
>
ëë8 9
(
ëë9 :
nullable
ëë: B
:
ëëB C
false
ëëD I
)
ëëI J
,
ëëJ K
CostoUnitario
ìì !
=
ìì" #
table
ìì$ )
.
ìì) *
Column
ìì* 0
<
ìì0 1
double
ìì1 7
>
ìì7 8
(
ìì8 9
nullable
ìì9 A
:
ììA B
false
ììC H
)
ììH I
}
íí 
,
íí 
constraints
îî 
:
îî 
table
îî "
=>
îî# %
{
ïï 
table
ðð 
.
ðð 

PrimaryKey
ðð $
(
ðð$ %
$str
ðð% 7
,
ðð7 8
x
ðð9 :
=>
ðð; =
new
ðð> A
{
ððB C
x
ððD E
.
ððE F

ProductoId
ððF P
,
ððP Q
x
ððR S
.
ððS T
VentaId
ððT [
}
ðð\ ]
)
ðð] ^
;
ðð^ _
table
ññ 
.
ññ 

ForeignKey
ññ $
(
ññ$ %
name
òò 
:
òò 
$str
òò D
,
òòD E
column
óó 
:
óó 
x
óó  !
=>
óó" $
x
óó% &
.
óó& '

ProductoId
óó' 1
,
óó1 2
principalTable
ôô &
:
ôô& '
$str
ôô( 2
,
ôô2 3
principalColumn
õõ '
:
õõ' (
$str
õõ) -
,
õõ- .
onDelete
öö  
:
öö  !
ReferentialAction
öö" 3
.
öö3 4
Cascade
öö4 ;
)
öö; <
;
öö< =
table
÷÷ 
.
÷÷ 

ForeignKey
÷÷ $
(
÷÷$ %
name
øø 
:
øø 
$str
øø ?
,
øø? @
column
ùù 
:
ùù 
x
ùù  !
=>
ùù" $
x
ùù% &
.
ùù& '
VentaId
ùù' .
,
ùù. /
principalTable
úú &
:
úú& '
$str
úú( 0
,
úú0 1
principalColumn
ûû '
:
ûû' (
$str
ûû) -
,
ûû- .
onDelete
üü  
:
üü  !
ReferentialAction
üü" 3
.
üü3 4
Cascade
üü4 ;
)
üü; <
;
üü< =
}
ýý 
)
ýý 
;
ýý 
migrationBuilder
ÿÿ 
.
ÿÿ 
CreateTable
ÿÿ (
(
ÿÿ( )
name
 
:
 
$str
 +
,
+ ,
columns
 
:
 
table
 
=>
 !
new
" %
{
 
FabricacionId
 !
=
" #
table
$ )
.
) *
Column
* 0
<
0 1
int
1 4
>
4 5
(
5 6
nullable
6 >
:
> ?
false
@ E
)
E F
,
F G
MateriaPrimaId
 "
=
# $
table
% *
.
* +
Column
+ 1
<
1 2
int
2 5
>
5 6
(
6 7
nullable
7 ?
:
? @
false
A F
)
F G
,
G H
Cantidad
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
double
, 2
>
2 3
(
3 4
nullable
4 <
:
< =
false
> C
)
C D
,
D E
Costo
 
=
 
table
 !
.
! "
Column
" (
<
( )
double
) /
>
/ 0
(
0 1
nullable
1 9
:
9 :
false
; @
)
@ A
,
A B$
ProductoMateriaPrimaId
 *
=
+ ,
table
- 2
.
2 3
Column
3 9
<
9 :
int
: =
>
= >
(
> ?
nullable
? G
:
G H
true
I M
)
M N
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% =
,
= >
x
? @
=>
A C
new
D G
{
H I
x
J K
.
K L
FabricacionId
L Y
,
Y Z
x
[ \
.
\ ]
MateriaPrimaId
] k
}
l m
)
m n
;
n o
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 R
,
R S
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
FabricacionId
' 4
,
4 5
principalTable
 &
:
& '
$str
( 7
,
7 8
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 N
,
N O
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
MateriaPrimaId
' 5
,
5 6
principalTable
 &
:
& '
$str
( 2
,
2 3
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 V
,
V W
column
 
:
 
x
  !
=>
" $
x
% &
.
& '$
ProductoMateriaPrimaId
' =
,
= >
principalTable
 &
:
& '
$str
( 2
,
2 3
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Restrict
4 <
)
< =
;
= >
}
 
)
 
;
 
migrationBuilder
   
.
   
CreateTable
   (
(
  ( )
name
¡¡ 
:
¡¡ 
$str
¡¡ *
,
¡¡* +
columns
¢¢ 
:
¢¢ 
table
¢¢ 
=>
¢¢ !
new
¢¢" %
{
££ 
DevolucionId
¤¤  
=
¤¤! "
table
¤¤# (
.
¤¤( )
Column
¤¤) /
<
¤¤/ 0
int
¤¤0 3
>
¤¤3 4
(
¤¤4 5
nullable
¤¤5 =
:
¤¤= >
false
¤¤? D
)
¤¤D E
,
¤¤E F

ProductoId
¥¥ 
=
¥¥  
table
¥¥! &
.
¥¥& '
Column
¥¥' -
<
¥¥- .
int
¥¥. 1
>
¥¥1 2
(
¥¥2 3
nullable
¥¥3 ;
:
¥¥; <
false
¥¥= B
)
¥¥B C
,
¥¥C D
Id
¦¦ 
=
¦¦ 
table
¦¦ 
.
¦¦ 
Column
¦¦ %
<
¦¦% &
int
¦¦& )
>
¦¦) *
(
¦¦* +
nullable
¦¦+ 3
:
¦¦3 4
false
¦¦5 :
)
¦¦: ;
,
¦¦; <
Cantidad
§§ 
=
§§ 
table
§§ $
.
§§$ %
Column
§§% +
<
§§+ ,
double
§§, 2
>
§§2 3
(
§§3 4
nullable
§§4 <
:
§§< =
false
§§> C
)
§§C D
}
¨¨ 
,
¨¨ 
constraints
©© 
:
©© 
table
©© "
=>
©©# %
{
ªª 
table
«« 
.
«« 

PrimaryKey
«« $
(
««$ %
$str
««% <
,
««< =
x
««> ?
=>
««@ B
new
««C F
{
««G H
x
««I J
.
««J K

ProductoId
««K U
,
««U V
x
««W X
.
««X Y
DevolucionId
««Y e
}
««f g
)
««g h
;
««h i
table
¬¬ 
.
¬¬ 

ForeignKey
¬¬ $
(
¬¬$ %
name
­­ 
:
­­ 
$str
­­ O
,
­­O P
column
®® 
:
®® 
x
®®  !
=>
®®" $
x
®®% &
.
®®& '
DevolucionId
®®' 3
,
®®3 4
principalTable
¯¯ &
:
¯¯& '
$str
¯¯( 6
,
¯¯6 7
principalColumn
°° '
:
°°' (
$str
°°) -
,
°°- .
onDelete
±±  
:
±±  !
ReferentialAction
±±" 3
.
±±3 4
Cascade
±±4 ;
)
±±; <
;
±±< =
table
²² 
.
²² 

ForeignKey
²² $
(
²²$ %
name
³³ 
:
³³ 
$str
³³ I
,
³³I J
column
´´ 
:
´´ 
x
´´  !
=>
´´" $
x
´´% &
.
´´& '

ProductoId
´´' 1
,
´´1 2
principalTable
µµ &
:
µµ& '
$str
µµ( 2
,
µµ2 3
principalColumn
¶¶ '
:
¶¶' (
$str
¶¶) -
,
¶¶- .
onDelete
··  
:
··  !
ReferentialAction
··" 3
.
··3 4
Cascade
··4 ;
)
··; <
;
··< =
}
¸¸ 
)
¸¸ 
;
¸¸ 
migrationBuilder
ºº 
.
ºº 
CreateIndex
ºº (
(
ºº( )
name
»» 
:
»» 
$str
»» 2
,
»»2 3
table
¼¼ 
:
¼¼ 
$str
¼¼ '
,
¼¼' (
column
½½ 
:
½½ 
$str
½½ "
)
½½" #
;
½½# $
migrationBuilder
¿¿ 
.
¿¿ 
CreateIndex
¿¿ (
(
¿¿( )
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ .
,
ÀÀ. /
table
ÁÁ 
:
ÁÁ 
$str
ÁÁ  
,
ÁÁ  !
column
ÂÂ 
:
ÂÂ 
$str
ÂÂ %
)
ÂÂ% &
;
ÂÂ& '
migrationBuilder
ÄÄ 
.
ÄÄ 
CreateIndex
ÄÄ (
(
ÄÄ( )
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ ,
,
ÅÅ, -
table
ÆÆ 
:
ÆÆ 
$str
ÆÆ  
,
ÆÆ  !
column
ÇÇ 
:
ÇÇ 
$str
ÇÇ #
)
ÇÇ# $
;
ÇÇ$ %
migrationBuilder
ÉÉ 
.
ÉÉ 
CreateIndex
ÉÉ (
(
ÉÉ( )
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ -
,
ÊÊ- .
table
ËË 
:
ËË 
$str
ËË !
,
ËË! "
column
ÌÌ 
:
ÌÌ 
$str
ÌÌ #
)
ÌÌ# $
;
ÌÌ$ %
migrationBuilder
ÎÎ 
.
ÎÎ 
CreateIndex
ÎÎ (
(
ÎÎ( )
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ :
,
ÏÏ: ;
table
ÐÐ 
:
ÐÐ 
$str
ÐÐ +
,
ÐÐ+ ,
column
ÑÑ 
:
ÑÑ 
$str
ÑÑ &
)
ÑÑ& '
;
ÑÑ' (
migrationBuilder
ÓÓ 
.
ÓÓ 
CreateIndex
ÓÓ (
(
ÓÓ( )
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ 1
,
ÔÔ1 2
table
ÕÕ 
:
ÕÕ 
$str
ÕÕ %
,
ÕÕ% &
column
ÖÖ 
:
ÖÖ 
$str
ÖÖ #
)
ÖÖ# $
;
ÖÖ$ %
migrationBuilder
ØØ 
.
ØØ 
CreateIndex
ØØ (
(
ØØ( )
name
ÙÙ 
:
ÙÙ 
$str
ÙÙ 1
,
ÙÙ1 2
table
ÚÚ 
:
ÚÚ 
$str
ÚÚ %
,
ÚÚ% &
column
ÛÛ 
:
ÛÛ 
$str
ÛÛ #
)
ÛÛ# $
;
ÛÛ$ %
migrationBuilder
ÝÝ 
.
ÝÝ 
CreateIndex
ÝÝ (
(
ÝÝ( )
name
ÞÞ 
:
ÞÞ 
$str
ÞÞ /
,
ÞÞ/ 0
table
ßß 
:
ßß 
$str
ßß %
,
ßß% &
column
àà 
:
àà 
$str
àà !
)
àà! "
;
àà" #
migrationBuilder
ââ 
.
ââ 
CreateIndex
ââ (
(
ââ( )
name
ãã 
:
ãã 
$str
ãã =
,
ãã= >
table
ää 
:
ää 
$str
ää ,
,
ää, -
column
åå 
:
åå 
$str
åå (
)
åå( )
;
åå) *
migrationBuilder
çç 
.
çç 
CreateIndex
çç (
(
çç( )
name
èè 
:
èè 
$str
èè E
,
èèE F
table
éé 
:
éé 
$str
éé ,
,
éé, -
column
êê 
:
êê 
$str
êê 0
)
êê0 1
;
êê1 2
migrationBuilder
ìì 
.
ìì 
CreateIndex
ìì (
(
ìì( )
name
íí 
:
íí 
$str
íí 3
,
íí3 4
table
îî 
:
îî 
$str
îî &
,
îî& '
column
ïï 
:
ïï 
$str
ïï $
)
ïï$ %
;
ïï% &
migrationBuilder
ññ 
.
ññ 
CreateIndex
ññ (
(
ññ( )
name
òò 
:
òò 
$str
òò :
,
òò: ;
table
óó 
:
óó 
$str
óó &
,
óó& '
column
ôô 
:
ôô 
$str
ôô +
)
ôô+ ,
;
ôô, -
migrationBuilder
öö 
.
öö 
CreateIndex
öö (
(
öö( )
name
÷÷ 
:
÷÷ 
$str
÷÷ 0
,
÷÷0 1
table
øø 
:
øø 
$str
øø !
,
øø! "
column
ùù 
:
ùù 
$str
ùù &
)
ùù& '
;
ùù' (
migrationBuilder
ûû 
.
ûû 
CreateIndex
ûû (
(
ûû( )
name
üü 
:
üü 
$str
üü 2
,
üü2 3
table
ýý 
:
ýý 
$str
ýý !
,
ýý! "
column
þþ 
:
þþ 
$str
þþ (
)
þþ( )
;
þþ) *
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 8
,
8 9
table
 
:
 
$str
 !
,
! "
column
 
:
 
$str
 .
)
. /
;
/ 0
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 M
,
M N
table
 
:
 
$str
 4
,
4 5
column
 
:
 
$str
 0
)
0 1
;
1 2
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 M
,
M N
table
 
:
 
$str
 4
,
4 5
column
 
:
 
$str
 0
)
0 1
;
1 2
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 <
,
< =
table
 
:
 
$str
 &
,
& '
column
 
:
 
$str
 -
)
- .
;
. /
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 ?
,
? @
table
 
:
 
$str
 &
,
& '
column
 
:
 
$str
 0
)
0 1
;
1 2
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 :
,
: ;
table
 
:
 
$str
 .
,
. /
column
 
:
 
$str
 #
)
# $
;
$ %
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
 
:
 
$str
 4
,
4 5
table
   
:
   
$str
   (
,
  ( )
column
¡¡ 
:
¡¡ 
$str
¡¡ #
)
¡¡# $
;
¡¡$ %
migrationBuilder
££ 
.
££ 
CreateIndex
££ (
(
££( )
name
¤¤ 
:
¤¤ 
$str
¤¤ 6
,
¤¤6 7
table
¥¥ 
:
¥¥ 
$str
¥¥ *
,
¥¥* +
column
¦¦ 
:
¦¦ 
$str
¦¦ #
)
¦¦# $
;
¦¦$ %
migrationBuilder
¨¨ 
.
¨¨ 
CreateIndex
¨¨ (
(
¨¨( )
name
©© 
:
©© 
$str
©© 8
,
©©8 9
table
ªª 
:
ªª 
$str
ªª ,
,
ªª, -
column
«« 
:
«« 
$str
«« #
)
««# $
;
««$ %
migrationBuilder
­­ 
.
­­ 
CreateIndex
­­ (
(
­­( )
name
®® 
:
®® 
$str
®® 5
,
®®5 6
table
¯¯ 
:
¯¯ 
$str
¯¯ )
,
¯¯) *
column
°° 
:
°° 
$str
°° #
)
°°# $
;
°°$ %
migrationBuilder
²² 
.
²² 
CreateIndex
²² (
(
²²( )
name
³³ 
:
³³ 
$str
³³ 1
,
³³1 2
table
´´ 
:
´´ 
$str
´´ (
,
´´( )
column
µµ 
:
µµ 
$str
µµ  
)
µµ  !
;
µµ! "
migrationBuilder
·· 
.
·· 
CreateIndex
·· (
(
··( )
name
¸¸ 
:
¸¸ 
$str
¸¸ 4
,
¸¸4 5
table
¹¹ 
:
¹¹ 
$str
¹¹ (
,
¹¹( )
column
ºº 
:
ºº 
$str
ºº #
)
ºº# $
;
ºº$ %
migrationBuilder
¼¼ 
.
¼¼ 
CreateIndex
¼¼ (
(
¼¼( )
name
½½ 
:
½½ 
$str
½½ .
,
½½. /
table
¾¾ 
:
¾¾ 
$str
¾¾ $
,
¾¾$ %
column
¿¿ 
:
¿¿ 
$str
¿¿ !
)
¿¿! "
;
¿¿" #
migrationBuilder
ÁÁ 
.
ÁÁ 
CreateIndex
ÁÁ (
(
ÁÁ( )
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ 0
,
ÂÂ0 1
table
ÃÃ 
:
ÃÃ 
$str
ÃÃ &
,
ÃÃ& '
column
ÄÄ 
:
ÄÄ 
$str
ÄÄ !
)
ÄÄ! "
;
ÄÄ" #
migrationBuilder
ÆÆ 
.
ÆÆ 
CreateIndex
ÆÆ (
(
ÆÆ( )
name
ÇÇ 
:
ÇÇ 
$str
ÇÇ +
,
ÇÇ+ ,
table
ÈÈ 
:
ÈÈ 
$str
ÈÈ 
,
ÈÈ  
column
ÉÉ 
:
ÉÉ 
$str
ÉÉ #
)
ÉÉ# $
;
ÉÉ$ %
migrationBuilder
ËË 
.
ËË 
CreateIndex
ËË (
(
ËË( )
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ +
,
ÌÌ+ ,
table
ÍÍ 
:
ÍÍ 
$str
ÍÍ 
,
ÍÍ  
column
ÎÎ 
:
ÎÎ 
$str
ÎÎ #
)
ÎÎ# $
;
ÎÎ$ %
}
ÏÏ 	
	protected
ÑÑ 
override
ÑÑ 
void
ÑÑ 
Down
ÑÑ  $
(
ÑÑ$ %
MigrationBuilder
ÑÑ% 5
migrationBuilder
ÑÑ6 F
)
ÑÑF G
{
ÒÒ 	
migrationBuilder
ÓÓ 
.
ÓÓ 
	DropTable
ÓÓ &
(
ÓÓ& '
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ &
)
ÔÔ& '
;
ÔÔ' (
migrationBuilder
ÖÖ 
.
ÖÖ 
	DropTable
ÖÖ &
(
ÖÖ& '
name
×× 
:
×× 
$str
××  
)
××  !
;
××! "
migrationBuilder
ÙÙ 
.
ÙÙ 
	DropTable
ÙÙ &
(
ÙÙ& '
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ *
)
ÚÚ* +
;
ÚÚ+ ,
migrationBuilder
ÜÜ 
.
ÜÜ 
	DropTable
ÜÜ &
(
ÜÜ& '
name
ÝÝ 
:
ÝÝ 
$str
ÝÝ +
)
ÝÝ+ ,
;
ÝÝ, -
migrationBuilder
ßß 
.
ßß 
	DropTable
ßß &
(
ßß& '
name
àà 
:
àà 
$str
àà 3
)
àà3 4
;
àà4 5
migrationBuilder
ââ 
.
ââ 
	DropTable
ââ &
(
ââ& '
name
ãã 
:
ãã 
$str
ãã -
)
ãã- .
;
ãã. /
migrationBuilder
åå 
.
åå 
	DropTable
åå &
(
åå& '
name
ææ 
:
ææ 
$str
ææ #
)
ææ# $
;
ææ$ %
migrationBuilder
èè 
.
èè 
	DropTable
èè &
(
èè& '
name
éé 
:
éé 
$str
éé %
)
éé% &
;
éé& '
migrationBuilder
ëë 
.
ëë 
	DropTable
ëë &
(
ëë& '
name
ìì 
:
ìì 
$str
ìì 
)
ìì  
;
ìì  !
migrationBuilder
îî 
.
îî 
	DropTable
îî &
(
îî& '
name
ïï 
:
ïï 
$str
ïï $
)
ïï$ %
;
ïï% &
migrationBuilder
ññ 
.
ññ 
	DropTable
ññ &
(
ññ& '
name
òò 
:
òò 
$str
òò %
)
òò% &
;
òò& '
migrationBuilder
ôô 
.
ôô 
	DropTable
ôô &
(
ôô& '
name
õõ 
:
õõ 
$str
õõ (
)
õõ( )
;
õõ) *
migrationBuilder
÷÷ 
.
÷÷ 
	DropTable
÷÷ &
(
÷÷& '
name
øø 
:
øø 
$str
øø 
)
øø 
;
øø  
migrationBuilder
úú 
.
úú 
	DropTable
úú &
(
úú& '
name
ûû 
:
ûû 
$str
ûû  
)
ûû  !
;
ûû! "
migrationBuilder
ýý 
.
ýý 
	DropTable
ýý &
(
ýý& '
name
þþ 
:
þþ 
$str
þþ )
)
þþ) *
;
þþ* +
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 %
)
% &
;
& '
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 +
)
+ ,
;
, -
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
 
;
 
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 "
)
" #
;
# $
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
  
)
  !
;
! "
}
 	
}
 
} ü
dc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Migrations\20200807180817_umas12.cs
	namespace 	
Infrastructure
 
. 

Migrations #
{ 
public 

partial 
class 
umas12 
:  !
	Migration" +
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}

 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} æ
cc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Migrations\20200807181017_umas2.cs
	namespace 	
Infrastructure
 
. 

Migrations #
{ 
public 

partial 
class 
umas2 
:  
	Migration! *
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
CreateTable

 (
(

( )
name 
: 
$str %
,% &
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
nullable+ 3
:3 4
false5 :
): ;
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Monto 
= 
table !
.! "
Column" (
<( )
decimal) 0
>0 1
(1 2
type2 6
:6 7
$str8 F
,F G
nullableH P
:P Q
falseR W
)W X
,X Y
TipoDeTransaccion %
=& '
table( -
.- .
Column. 4
<4 5
int5 8
>8 9
(9 :
nullable: B
:B C
falseD I
)I J
,J K
Concepto 
= 
table $
.$ %
Column% +
<+ ,
int, /
>/ 0
(0 1
nullable1 9
:9 :
false; @
)@ A
,A B
Descripcion 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
nullable7 ?
:? @
trueA E
)E F
,F G
Fecha 
= 
table !
.! "
Column" (
<( )
DateTime) 1
>1 2
(2 3
nullable3 ;
:; <
false= B
)B C
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 7
,7 8
x9 :
=>; =
x> ?
.? @
Id@ B
)B C
;C D
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str %
)% &
;& '
}   	
}!! 
}"" ù
cc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Migrations\20200807183348_umas3.cs
	namespace 	
Infrastructure
 
. 

Migrations #
{ 
public 

partial 
class 
umas3 
:  
	Migration! *
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
AlterColumn		 (
<		( )
decimal		) 0
>		0 1
(		1 2
name

 
:

 
$str

  
,

  !
table 
: 
$str 
,  
type 
: 
$str $
,$ %
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
double# )
)) *
,* +
oldType 
: 
$str  
)  !
;! "
migrationBuilder 
. 
AlterColumn (
<( )
decimal) 0
>0 1
(1 2
name 
: 
$str !
,! "
table 
: 
$str 
,  
type 
: 
$str $
,$ %
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
double# )
)) *
,* +
oldType 
: 
$str  
)  !
;! "
migrationBuilder 
. 
AlterColumn (
<( )
decimal) 0
>0 1
(1 2
name 
: 
$str 
, 
table 
: 
$str 
,  
type 
: 
$str $
,$ %
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
double# )
)) *
,* +
oldType 
: 
$str  
)  !
;! "
migrationBuilder!! 
.!! 
AlterColumn!! (
<!!( )
decimal!!) 0
>!!0 1
(!!1 2
name"" 
:"" 
$str"" !
,""! "
table## 
:## 
$str## 
,##  
type$$ 
:$$ 
$str$$ $
,$$$ %
nullable%% 
:%% 
false%% 
,%%  

oldClrType&& 
:&& 
typeof&& "
(&&" #
double&&# )
)&&) *
,&&* +
oldType'' 
:'' 
$str''  
)''  !
;''! "
migrationBuilder)) 
.)) 
AlterColumn)) (
<))( )
decimal))) 0
>))0 1
())1 2
name** 
:** 
$str** 
,** 
table++ 
:++ 
$str++ 
,++  
type,, 
:,, 
$str,, $
,,,$ %
nullable-- 
:-- 
false-- 
,--  

oldClrType.. 
:.. 
typeof.. "
(.." #
double..# )
)..) *
,..* +
oldType// 
:// 
$str//  
)//  !
;//! "
migrationBuilder11 
.11 
AlterColumn11 (
<11( )
decimal11) 0
>110 1
(111 2
name22 
:22 
$str22 !
,22! "
table33 
:33 
$str33 
,33  
type44 
:44 
$str44 $
,44$ %
nullable55 
:55 
false55 
,55  

oldClrType66 
:66 
typeof66 "
(66" #
double66# )
)66) *
,66* +
oldType77 
:77 
$str77  
)77  !
;77! "
migrationBuilder99 
.99 
AlterColumn99 (
<99( )
decimal99) 0
>990 1
(991 2
name:: 
::: 
$str:: &
,::& '
table;; 
:;; 
$str;; &
,;;& '
type<< 
:<< 
$str<< $
,<<$ %
nullable== 
:== 
false== 
,==  

oldClrType>> 
:>> 
typeof>> "
(>>" #
double>># )
)>>) *
,>>* +
oldType?? 
:?? 
$str??  
)??  !
;??! "
migrationBuilderAA 
.AA 
AlterColumnAA (
<AA( )
decimalAA) 0
>AA0 1
(AA1 2
nameBB 
:BB 
$strBB %
,BB% &
tableCC 
:CC 
$strCC &
,CC& '
typeDD 
:DD 
$strDD $
,DD$ %
nullableEE 
:EE 
falseEE 
,EE  

oldClrTypeFF 
:FF 
typeofFF "
(FF" #
doubleFF# )
)FF) *
,FF* +
oldTypeGG 
:GG 
$strGG  
)GG  !
;GG! "
migrationBuilderII 
.II 
AlterColumnII (
<II( )
decimalII) 0
>II0 1
(II1 2
nameJJ 
:JJ 
$strJJ  
,JJ  !
tableKK 
:KK 
$strKK &
,KK& '
typeLL 
:LL 
$strLL $
,LL$ %
nullableMM 
:MM 
falseMM 
,MM  

oldClrTypeNN 
:NN 
typeofNN "
(NN" #
doubleNN# )
)NN) *
,NN* +
oldTypeOO 
:OO 
$strOO  
)OO  !
;OO! "
migrationBuilderQQ 
.QQ 
AlterColumnQQ (
<QQ( )
decimalQQ) 0
>QQ0 1
(QQ1 2
nameRR 
:RR 
$strRR 
,RR 
tableSS 
:SS 
$strSS $
,SS$ %
typeTT 
:TT 
$strTT $
,TT$ %
nullableUU 
:UU 
falseUU 
,UU  

oldClrTypeVV 
:VV 
typeofVV "
(VV" #
doubleVV# )
)VV) *
,VV* +
oldTypeWW 
:WW 
$strWW  
)WW  !
;WW! "
migrationBuilderYY 
.YY 
AlterColumnYY (
<YY( )
decimalYY) 0
>YY0 1
(YY1 2
nameZZ 
:ZZ 
$strZZ 
,ZZ 
table[[ 
:[[ 
$str[[ .
,[[. /
nullable\\ 
:\\ 
false\\ 
,\\  

oldClrType]] 
:]] 
typeof]] "
(]]" #
double]]# )
)]]) *
,]]* +
oldType^^ 
:^^ 
$str^^  
)^^  !
;^^! "
migrationBuilder`` 
.`` 
AlterColumn`` (
<``( )
decimal``) 0
>``0 1
(``1 2
nameaa 
:aa 
$straa 
,aa 
tablebb 
:bb 
$strbb .
,bb. /
nullablecc 
:cc 
falsecc 
,cc  

oldClrTypedd 
:dd 
typeofdd "
(dd" #
doubledd# )
)dd) *
,dd* +
oldTypeee 
:ee 
$stree  
)ee  !
;ee! "
migrationBuildergg 
.gg 
AlterColumngg (
<gg( )
decimalgg) 0
>gg0 1
(gg1 2
namehh 
:hh 
$strhh 
,hh 
tableii 
:ii 
$strii 4
,ii4 5
nullablejj 
:jj 
falsejj 
,jj  

oldClrTypekk 
:kk 
typeofkk "
(kk" #
doublekk# )
)kk) *
,kk* +
oldTypell 
:ll 
$strll  
)ll  !
;ll! "
migrationBuildernn 
.nn 
AlterColumnnn (
<nn( )
decimalnn) 0
>nn0 1
(nn1 2
nameoo 
:oo 
$stroo  
,oo  !
tablepp 
:pp 
$strpp 4
,pp4 5
nullableqq 
:qq 
falseqq 
,qq  

oldClrTyperr 
:rr 
typeofrr "
(rr" #
doublerr# )
)rr) *
,rr* +
oldTypess 
:ss 
$strss  
)ss  !
;ss! "
migrationBuilderuu 
.uu 
AlterColumnuu (
<uu( )
decimaluu) 0
>uu0 1
(uu1 2
namevv 
:vv 
$strvv ,
,vv, -
tableww 
:ww 
$strww !
,ww! "
typexx 
:xx 
$strxx $
,xx$ %
nullableyy 
:yy 
falseyy 
,yy  

oldClrTypezz 
:zz 
typeofzz "
(zz" #
doublezz# )
)zz) *
,zz* +
oldType{{ 
:{{ 
$str{{  
){{  !
;{{! "
migrationBuilder}} 
.}} 
AlterColumn}} (
<}}( )
decimal}}) 0
>}}0 1
(}}1 2
name~~ 
:~~ 
$str~~ %
,~~% &
table 
: 
$str !
,! "
type
 
:
 
$str
 $
,
$ %
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
,
* +
oldType
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
decimal
) 0
>
0 1
(
1 2
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 !
,
! "
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
,
* +
oldType
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
decimal
) 0
>
0 1
(
1 2
name
 
:
 
$str
 
,
 
table
 
:
 
$str
 &
,
& '
type
 
:
 
$str
 $
,
$ %
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
,
* +
oldType
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
decimal
) 0
>
0 1
(
1 2
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 &
,
& '
type
 
:
 
$str
 $
,
$ %
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
double
# )
)
) *
,
* +
oldType
 
:
 
$str
  
)
  !
;
! "
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
decimal
) 0
>
0 1
(
1 2
name
 
:
 
$str
 
,
 
table
 
:
 
$str
 ,
,
, -
type
 
:
 
$str
 $
,
$ %
nullable
   
:
   
false
   
,
    

oldClrType
¡¡ 
:
¡¡ 
typeof
¡¡ "
(
¡¡" #
double
¡¡# )
)
¡¡) *
,
¡¡* +
oldType
¢¢ 
:
¢¢ 
$str
¢¢  
)
¢¢  !
;
¢¢! "
migrationBuilder
¤¤ 
.
¤¤ 
AlterColumn
¤¤ (
<
¤¤( )
decimal
¤¤) 0
>
¤¤0 1
(
¤¤1 2
name
¥¥ 
:
¥¥ 
$str
¥¥  
,
¥¥  !
table
¦¦ 
:
¦¦ 
$str
¦¦ ,
,
¦¦, -
type
§§ 
:
§§ 
$str
§§ $
,
§§$ %
nullable
¨¨ 
:
¨¨ 
false
¨¨ 
,
¨¨  

oldClrType
©© 
:
©© 
typeof
©© "
(
©©" #
double
©©# )
)
©©) *
,
©©* +
oldType
ªª 
:
ªª 
$str
ªª  
)
ªª  !
;
ªª! "
migrationBuilder
¬¬ 
.
¬¬ 
AlterColumn
¬¬ (
<
¬¬( )
decimal
¬¬) 0
>
¬¬0 1
(
¬¬1 2
name
­­ 
:
­­ 
$str
­­ 
,
­­ 
table
®® 
:
®® 
$str
®® %
,
®®% &
type
¯¯ 
:
¯¯ 
$str
¯¯ $
,
¯¯$ %
nullable
°° 
:
°° 
false
°° 
,
°°  

oldClrType
±± 
:
±± 
typeof
±± "
(
±±" #
double
±±# )
)
±±) *
,
±±* +
oldType
²² 
:
²² 
$str
²²  
)
²²  !
;
²²! "
migrationBuilder
´´ 
.
´´ 
AlterColumn
´´ (
<
´´( )
decimal
´´) 0
>
´´0 1
(
´´1 2
name
µµ 
:
µµ 
$str
µµ  
,
µµ  !
table
¶¶ 
:
¶¶ 
$str
¶¶ +
,
¶¶+ ,
type
·· 
:
·· 
$str
·· $
,
··$ %
nullable
¸¸ 
:
¸¸ 
false
¸¸ 
,
¸¸  

oldClrType
¹¹ 
:
¹¹ 
typeof
¹¹ "
(
¹¹" #
double
¹¹# )
)
¹¹) *
,
¹¹* +
oldType
ºº 
:
ºº 
$str
ºº  
)
ºº  !
;
ºº! "
migrationBuilder
¼¼ 
.
¼¼ 
AlterColumn
¼¼ (
<
¼¼( )
decimal
¼¼) 0
>
¼¼0 1
(
¼¼1 2
name
½½ 
:
½½ 
$str
½½ 
,
½½ 
table
¾¾ 
:
¾¾ 
$str
¾¾  
,
¾¾  !
type
¿¿ 
:
¿¿ 
$str
¿¿ $
,
¿¿$ %
nullable
ÀÀ 
:
ÀÀ 
false
ÀÀ 
,
ÀÀ  

oldClrType
ÁÁ 
:
ÁÁ 
typeof
ÁÁ "
(
ÁÁ" #
double
ÁÁ# )
)
ÁÁ) *
,
ÁÁ* +
oldType
ÂÂ 
:
ÂÂ 
$str
ÂÂ  
)
ÂÂ  !
;
ÂÂ! "
migrationBuilder
ÄÄ 
.
ÄÄ 
AlterColumn
ÄÄ (
<
ÄÄ( )
decimal
ÄÄ) 0
>
ÄÄ0 1
(
ÄÄ1 2
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ 
,
ÅÅ 
table
ÆÆ 
:
ÆÆ 
$str
ÆÆ '
,
ÆÆ' (
type
ÇÇ 
:
ÇÇ 
$str
ÇÇ $
,
ÇÇ$ %
nullable
ÈÈ 
:
ÈÈ 
false
ÈÈ 
,
ÈÈ  

oldClrType
ÉÉ 
:
ÉÉ 
typeof
ÉÉ "
(
ÉÉ" #
double
ÉÉ# )
)
ÉÉ) *
,
ÉÉ* +
oldType
ÊÊ 
:
ÊÊ 
$str
ÊÊ  
)
ÊÊ  !
;
ÊÊ! "
migrationBuilder
ÌÌ 
.
ÌÌ 
AlterColumn
ÌÌ (
<
ÌÌ( )
decimal
ÌÌ) 0
>
ÌÌ0 1
(
ÌÌ1 2
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ  
,
ÍÍ  !
table
ÎÎ 
:
ÎÎ 
$str
ÎÎ '
,
ÎÎ' (
type
ÏÏ 
:
ÏÏ 
$str
ÏÏ $
,
ÏÏ$ %
nullable
ÐÐ 
:
ÐÐ 
false
ÐÐ 
,
ÐÐ  

oldClrType
ÑÑ 
:
ÑÑ 
typeof
ÑÑ "
(
ÑÑ" #
double
ÑÑ# )
)
ÑÑ) *
,
ÑÑ* +
oldType
ÒÒ 
:
ÒÒ 
$str
ÒÒ  
)
ÒÒ  !
;
ÒÒ! "
}
ÓÓ 	
	protected
ÕÕ 
override
ÕÕ 
void
ÕÕ 
Down
ÕÕ  $
(
ÕÕ$ %
MigrationBuilder
ÕÕ% 5
migrationBuilder
ÕÕ6 F
)
ÕÕF G
{
ÖÖ 	
migrationBuilder
×× 
.
×× 
AlterColumn
×× (
<
××( )
double
××) /
>
××/ 0
(
××0 1
name
ØØ 
:
ØØ 
$str
ØØ  
,
ØØ  !
table
ÙÙ 
:
ÙÙ 
$str
ÙÙ 
,
ÙÙ  
type
ÚÚ 
:
ÚÚ 
$str
ÚÚ 
,
ÚÚ 
nullable
ÛÛ 
:
ÛÛ 
false
ÛÛ 
,
ÛÛ  

oldClrType
ÜÜ 
:
ÜÜ 
typeof
ÜÜ "
(
ÜÜ" #
decimal
ÜÜ# *
)
ÜÜ* +
,
ÜÜ+ ,
oldType
ÝÝ 
:
ÝÝ 
$str
ÝÝ '
)
ÝÝ' (
;
ÝÝ( )
migrationBuilder
ßß 
.
ßß 
AlterColumn
ßß (
<
ßß( )
double
ßß) /
>
ßß/ 0
(
ßß0 1
name
àà 
:
àà 
$str
àà !
,
àà! "
table
áá 
:
áá 
$str
áá 
,
áá  
type
ââ 
:
ââ 
$str
ââ 
,
ââ 
nullable
ãã 
:
ãã 
false
ãã 
,
ãã  

oldClrType
ää 
:
ää 
typeof
ää "
(
ää" #
decimal
ää# *
)
ää* +
,
ää+ ,
oldType
åå 
:
åå 
$str
åå '
)
åå' (
;
åå( )
migrationBuilder
çç 
.
çç 
AlterColumn
çç (
<
çç( )
double
çç) /
>
çç/ 0
(
çç0 1
name
èè 
:
èè 
$str
èè 
,
èè 
table
éé 
:
éé 
$str
éé 
,
éé  
type
êê 
:
êê 
$str
êê 
,
êê 
nullable
ëë 
:
ëë 
false
ëë 
,
ëë  

oldClrType
ìì 
:
ìì 
typeof
ìì "
(
ìì" #
decimal
ìì# *
)
ìì* +
,
ìì+ ,
oldType
íí 
:
íí 
$str
íí '
)
íí' (
;
íí( )
migrationBuilder
ïï 
.
ïï 
AlterColumn
ïï (
<
ïï( )
double
ïï) /
>
ïï/ 0
(
ïï0 1
name
ðð 
:
ðð 
$str
ðð !
,
ðð! "
table
ññ 
:
ññ 
$str
ññ 
,
ññ  
type
òò 
:
òò 
$str
òò 
,
òò 
nullable
óó 
:
óó 
false
óó 
,
óó  

oldClrType
ôô 
:
ôô 
typeof
ôô "
(
ôô" #
decimal
ôô# *
)
ôô* +
,
ôô+ ,
oldType
õõ 
:
õõ 
$str
õõ '
)
õõ' (
;
õõ( )
migrationBuilder
÷÷ 
.
÷÷ 
AlterColumn
÷÷ (
<
÷÷( )
double
÷÷) /
>
÷÷/ 0
(
÷÷0 1
name
øø 
:
øø 
$str
øø 
,
øø 
table
ùù 
:
ùù 
$str
ùù 
,
ùù  
type
úú 
:
úú 
$str
úú 
,
úú 
nullable
ûû 
:
ûû 
false
ûû 
,
ûû  

oldClrType
üü 
:
üü 
typeof
üü "
(
üü" #
decimal
üü# *
)
üü* +
,
üü+ ,
oldType
ýý 
:
ýý 
$str
ýý '
)
ýý' (
;
ýý( )
migrationBuilder
ÿÿ 
.
ÿÿ 
AlterColumn
ÿÿ (
<
ÿÿ( )
double
ÿÿ) /
>
ÿÿ/ 0
(
ÿÿ0 1
name
 
:
 
$str
 !
,
! "
table
 
:
 
$str
 
,
  
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
decimal
# *
)
* +
,
+ ,
oldType
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
 
:
 
$str
 &
,
& '
table
 
:
 
$str
 &
,
& '
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
decimal
# *
)
* +
,
+ ,
oldType
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
 
:
 
$str
 %
,
% &
table
 
:
 
$str
 &
,
& '
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
decimal
# *
)
* +
,
+ ,
oldType
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 &
,
& '
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
decimal
# *
)
* +
,
+ ,
oldType
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
   
:
   
$str
   
,
   
table
¡¡ 
:
¡¡ 
$str
¡¡ $
,
¡¡$ %
type
¢¢ 
:
¢¢ 
$str
¢¢ 
,
¢¢ 
nullable
££ 
:
££ 
false
££ 
,
££  

oldClrType
¤¤ 
:
¤¤ 
typeof
¤¤ "
(
¤¤" #
decimal
¤¤# *
)
¤¤* +
,
¤¤+ ,
oldType
¥¥ 
:
¥¥ 
$str
¥¥ '
)
¥¥' (
;
¥¥( )
migrationBuilder
§§ 
.
§§ 
AlterColumn
§§ (
<
§§( )
double
§§) /
>
§§/ 0
(
§§0 1
name
¨¨ 
:
¨¨ 
$str
¨¨ 
,
¨¨ 
table
©© 
:
©© 
$str
©© .
,
©©. /
type
ªª 
:
ªª 
$str
ªª 
,
ªª 
nullable
«« 
:
«« 
false
«« 
,
««  

oldClrType
¬¬ 
:
¬¬ 
typeof
¬¬ "
(
¬¬" #
decimal
¬¬# *
)
¬¬* +
)
¬¬+ ,
;
¬¬, -
migrationBuilder
®® 
.
®® 
AlterColumn
®® (
<
®®( )
double
®®) /
>
®®/ 0
(
®®0 1
name
¯¯ 
:
¯¯ 
$str
¯¯ 
,
¯¯ 
table
°° 
:
°° 
$str
°° .
,
°°. /
type
±± 
:
±± 
$str
±± 
,
±± 
nullable
²² 
:
²² 
false
²² 
,
²²  

oldClrType
³³ 
:
³³ 
typeof
³³ "
(
³³" #
decimal
³³# *
)
³³* +
)
³³+ ,
;
³³, -
migrationBuilder
µµ 
.
µµ 
AlterColumn
µµ (
<
µµ( )
double
µµ) /
>
µµ/ 0
(
µµ0 1
name
¶¶ 
:
¶¶ 
$str
¶¶ 
,
¶¶ 
table
·· 
:
·· 
$str
·· 4
,
··4 5
type
¸¸ 
:
¸¸ 
$str
¸¸ 
,
¸¸ 
nullable
¹¹ 
:
¹¹ 
false
¹¹ 
,
¹¹  

oldClrType
ºº 
:
ºº 
typeof
ºº "
(
ºº" #
decimal
ºº# *
)
ºº* +
)
ºº+ ,
;
ºº, -
migrationBuilder
¼¼ 
.
¼¼ 
AlterColumn
¼¼ (
<
¼¼( )
double
¼¼) /
>
¼¼/ 0
(
¼¼0 1
name
½½ 
:
½½ 
$str
½½  
,
½½  !
table
¾¾ 
:
¾¾ 
$str
¾¾ 4
,
¾¾4 5
type
¿¿ 
:
¿¿ 
$str
¿¿ 
,
¿¿ 
nullable
ÀÀ 
:
ÀÀ 
false
ÀÀ 
,
ÀÀ  

oldClrType
ÁÁ 
:
ÁÁ 
typeof
ÁÁ "
(
ÁÁ" #
decimal
ÁÁ# *
)
ÁÁ* +
)
ÁÁ+ ,
;
ÁÁ, -
migrationBuilder
ÃÃ 
.
ÃÃ 
AlterColumn
ÃÃ (
<
ÃÃ( )
double
ÃÃ) /
>
ÃÃ/ 0
(
ÃÃ0 1
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ ,
,
ÄÄ, -
table
ÅÅ 
:
ÅÅ 
$str
ÅÅ !
,
ÅÅ! "
type
ÆÆ 
:
ÆÆ 
$str
ÆÆ 
,
ÆÆ 
nullable
ÇÇ 
:
ÇÇ 
false
ÇÇ 
,
ÇÇ  

oldClrType
ÈÈ 
:
ÈÈ 
typeof
ÈÈ "
(
ÈÈ" #
decimal
ÈÈ# *
)
ÈÈ* +
,
ÈÈ+ ,
oldType
ÉÉ 
:
ÉÉ 
$str
ÉÉ '
)
ÉÉ' (
;
ÉÉ( )
migrationBuilder
ËË 
.
ËË 
AlterColumn
ËË (
<
ËË( )
double
ËË) /
>
ËË/ 0
(
ËË0 1
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ %
,
ÌÌ% &
table
ÍÍ 
:
ÍÍ 
$str
ÍÍ !
,
ÍÍ! "
type
ÎÎ 
:
ÎÎ 
$str
ÎÎ 
,
ÎÎ 
nullable
ÏÏ 
:
ÏÏ 
false
ÏÏ 
,
ÏÏ  

oldClrType
ÐÐ 
:
ÐÐ 
typeof
ÐÐ "
(
ÐÐ" #
decimal
ÐÐ# *
)
ÐÐ* +
,
ÐÐ+ ,
oldType
ÑÑ 
:
ÑÑ 
$str
ÑÑ '
)
ÑÑ' (
;
ÑÑ( )
migrationBuilder
ÓÓ 
.
ÓÓ 
AlterColumn
ÓÓ (
<
ÓÓ( )
double
ÓÓ) /
>
ÓÓ/ 0
(
ÓÓ0 1
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ  
,
ÔÔ  !
table
ÕÕ 
:
ÕÕ 
$str
ÕÕ !
,
ÕÕ! "
type
ÖÖ 
:
ÖÖ 
$str
ÖÖ 
,
ÖÖ 
nullable
×× 
:
×× 
false
×× 
,
××  

oldClrType
ØØ 
:
ØØ 
typeof
ØØ "
(
ØØ" #
decimal
ØØ# *
)
ØØ* +
)
ØØ+ ,
;
ØØ, -
migrationBuilder
ÚÚ 
.
ÚÚ 
AlterColumn
ÚÚ (
<
ÚÚ( )
double
ÚÚ) /
>
ÚÚ/ 0
(
ÚÚ0 1
name
ÛÛ 
:
ÛÛ 
$str
ÛÛ 
,
ÛÛ 
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ &
,
ÜÜ& '
type
ÝÝ 
:
ÝÝ 
$str
ÝÝ 
,
ÝÝ 
nullable
ÞÞ 
:
ÞÞ 
false
ÞÞ 
,
ÞÞ  

oldClrType
ßß 
:
ßß 
typeof
ßß "
(
ßß" #
decimal
ßß# *
)
ßß* +
,
ßß+ ,
oldType
àà 
:
àà 
$str
àà '
)
àà' (
;
àà( )
migrationBuilder
ââ 
.
ââ 
AlterColumn
ââ (
<
ââ( )
double
ââ) /
>
ââ/ 0
(
ââ0 1
name
ãã 
:
ãã 
$str
ãã  
,
ãã  !
table
ää 
:
ää 
$str
ää &
,
ää& '
type
åå 
:
åå 
$str
åå 
,
åå 
nullable
ææ 
:
ææ 
false
ææ 
,
ææ  

oldClrType
çç 
:
çç 
typeof
çç "
(
çç" #
decimal
çç# *
)
çç* +
,
çç+ ,
oldType
èè 
:
èè 
$str
èè '
)
èè' (
;
èè( )
migrationBuilder
êê 
.
êê 
AlterColumn
êê (
<
êê( )
double
êê) /
>
êê/ 0
(
êê0 1
name
ëë 
:
ëë 
$str
ëë 
,
ëë 
table
ìì 
:
ìì 
$str
ìì ,
,
ìì, -
type
íí 
:
íí 
$str
íí 
,
íí 
nullable
îî 
:
îî 
false
îî 
,
îî  

oldClrType
ïï 
:
ïï 
typeof
ïï "
(
ïï" #
decimal
ïï# *
)
ïï* +
,
ïï+ ,
oldType
ðð 
:
ðð 
$str
ðð '
)
ðð' (
;
ðð( )
migrationBuilder
òò 
.
òò 
AlterColumn
òò (
<
òò( )
double
òò) /
>
òò/ 0
(
òò0 1
name
óó 
:
óó 
$str
óó  
,
óó  !
table
ôô 
:
ôô 
$str
ôô ,
,
ôô, -
type
õõ 
:
õõ 
$str
õõ 
,
õõ 
nullable
öö 
:
öö 
false
öö 
,
öö  

oldClrType
÷÷ 
:
÷÷ 
typeof
÷÷ "
(
÷÷" #
decimal
÷÷# *
)
÷÷* +
,
÷÷+ ,
oldType
øø 
:
øø 
$str
øø '
)
øø' (
;
øø( )
migrationBuilder
úú 
.
úú 
AlterColumn
úú (
<
úú( )
double
úú) /
>
úú/ 0
(
úú0 1
name
ûû 
:
ûû 
$str
ûû 
,
ûû 
table
üü 
:
üü 
$str
üü %
,
üü% &
type
ýý 
:
ýý 
$str
ýý 
,
ýý 
nullable
þþ 
:
þþ 
false
þþ 
,
þþ  

oldClrType
ÿÿ 
:
ÿÿ 
typeof
ÿÿ "
(
ÿÿ" #
decimal
ÿÿ# *
)
ÿÿ* +
,
ÿÿ+ ,
oldType
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 +
,
+ ,
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
decimal
# *
)
* +
,
+ ,
oldType
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
 
:
 
$str
 
,
 
table
 
:
 
$str
  
,
  !
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
decimal
# *
)
* +
,
+ ,
oldType
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
 
:
 
$str
 
,
 
table
 
:
 
$str
 '
,
' (
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
decimal
# *
)
* +
,
+ ,
oldType
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
 
.
 
AlterColumn
 (
<
( )
double
) /
>
/ 0
(
0 1
name
 
:
 
$str
  
,
  !
table
 
:
 
$str
 '
,
' (
type
 
:
 
$str
 
,
 
nullable
 
:
 
false
 
,
  

oldClrType
 
:
 
typeof
 "
(
" #
decimal
# *
)
* +
,
+ ,
oldType
   
:
   
$str
   '
)
  ' (
;
  ( )
}
¡¡ 	
}
¢¢ 
}££ 6
cc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Migrations\20200807184005_umas4.cs
	namespace 	
Infrastructure
 
. 

Migrations #
{ 
public 

partial 
class 
umas4 
:  
	Migration! *
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
AlterColumn		 (
<		( )
decimal		) 0
>		0 1
(		1 2
name

 
:

 
$str

 
,

 
table 
: 
$str .
,. /
type 
: 
$str $
,$ %
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
decimal# *
)* +
,+ ,
oldType 
: 
$str (
)( )
;) *
migrationBuilder 
. 
AlterColumn (
<( )
decimal) 0
>0 1
(1 2
name 
: 
$str 
, 
table 
: 
$str .
,. /
type 
: 
$str $
,$ %
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
decimal# *
)* +
,+ ,
oldType 
: 
$str (
)( )
;) *
migrationBuilder 
. 
AlterColumn (
<( )
decimal) 0
>0 1
(1 2
name 
: 
$str 
, 
table 
: 
$str 4
,4 5
type 
: 
$str $
,$ %
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
decimal# *
)* +
,+ ,
oldType 
: 
$str (
)( )
;) *
migrationBuilder!! 
.!! 
AlterColumn!! (
<!!( )
decimal!!) 0
>!!0 1
(!!1 2
name"" 
:"" 
$str""  
,""  !
table## 
:## 
$str## 4
,##4 5
type$$ 
:$$ 
$str$$ $
,$$$ %
nullable%% 
:%% 
false%% 
,%%  

oldClrType&& 
:&& 
typeof&& "
(&&" #
decimal&&# *
)&&* +
,&&+ ,
oldType'' 
:'' 
$str'' (
)''( )
;'') *
migrationBuilder)) 
.)) 
AlterColumn)) (
<))( )
decimal))) 0
>))0 1
())1 2
name** 
:** 
$str**  
,**  !
table++ 
:++ 
$str++ !
,++! "
type,, 
:,, 
$str,, $
,,,$ %
nullable-- 
:-- 
false-- 
,--  

oldClrType.. 
:.. 
typeof.. "
(.." #
decimal..# *
)..* +
,..+ ,
oldType// 
:// 
$str// (
)//( )
;//) *
}00 	
	protected22 
override22 
void22 
Down22  $
(22$ %
MigrationBuilder22% 5
migrationBuilder226 F
)22F G
{33 	
migrationBuilder44 
.44 
AlterColumn44 (
<44( )
decimal44) 0
>440 1
(441 2
name55 
:55 
$str55 
,55 
table66 
:66 
$str66 .
,66. /
type77 
:77 
$str77 %
,77% &
nullable88 
:88 
false88 
,88  

oldClrType99 
:99 
typeof99 "
(99" #
decimal99# *
)99* +
,99+ ,
oldType:: 
::: 
$str:: '
)::' (
;::( )
migrationBuilder<< 
.<< 
AlterColumn<< (
<<<( )
decimal<<) 0
><<0 1
(<<1 2
name== 
:== 
$str== 
,== 
table>> 
:>> 
$str>> .
,>>. /
type?? 
:?? 
$str?? %
,??% &
nullable@@ 
:@@ 
false@@ 
,@@  

oldClrTypeAA 
:AA 
typeofAA "
(AA" #
decimalAA# *
)AA* +
,AA+ ,
oldTypeBB 
:BB 
$strBB '
)BB' (
;BB( )
migrationBuilderDD 
.DD 
AlterColumnDD (
<DD( )
decimalDD) 0
>DD0 1
(DD1 2
nameEE 
:EE 
$strEE 
,EE 
tableFF 
:FF 
$strFF 4
,FF4 5
typeGG 
:GG 
$strGG %
,GG% &
nullableHH 
:HH 
falseHH 
,HH  

oldClrTypeII 
:II 
typeofII "
(II" #
decimalII# *
)II* +
,II+ ,
oldTypeJJ 
:JJ 
$strJJ '
)JJ' (
;JJ( )
migrationBuilderLL 
.LL 
AlterColumnLL (
<LL( )
decimalLL) 0
>LL0 1
(LL1 2
nameMM 
:MM 
$strMM  
,MM  !
tableNN 
:NN 
$strNN 4
,NN4 5
typeOO 
:OO 
$strOO %
,OO% &
nullablePP 
:PP 
falsePP 
,PP  

oldClrTypeQQ 
:QQ 
typeofQQ "
(QQ" #
decimalQQ# *
)QQ* +
,QQ+ ,
oldTypeRR 
:RR 
$strRR '
)RR' (
;RR( )
migrationBuilderTT 
.TT 
AlterColumnTT (
<TT( )
decimalTT) 0
>TT0 1
(TT1 2
nameUU 
:UU 
$strUU  
,UU  !
tableVV 
:VV 
$strVV !
,VV! "
typeWW 
:WW 
$strWW %
,WW% &
nullableXX 
:XX 
falseXX 
,XX  

oldClrTypeYY 
:YY 
typeofYY "
(YY" #
decimalYY# *
)YY* +
,YY+ ,
oldTypeZZ 
:ZZ 
$strZZ '
)ZZ' (
;ZZ( )
}[[ 	
}\\ 
}]] Î
dc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Repositories\CategoriaRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
CategoriaRepository $
:% &
GenericRepository' 8
<8 9
ProductoCategoria9 J
>J K
,K L 
ICategoriaRepositoryM a
{ 
public		 
CategoriaRepository		 "
(		" #

IDbContext		# -
context		. 5
)		5 6
:		7 8
base		9 =
(		= >
context		> E
)		E F
{

 	
} 	
} 
} ·
ac:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Repositories\CompraRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
CompraRepository !
:" #
GenericRepository$ 5
<5 6
Compra6 <
>< =
,= >
ICompraRepository? P
{ 
public 
CompraRepository 
(  

IDbContext  *
context+ 2
)2 3
:4 5
base6 :
(: ;
context; B
)B C
{		 	
}

 	
} 
} Á
cc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Repositories\ProductoRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
ProductoRepository #
:$ %
GenericRepository& 7
<7 8
Producto8 @
>@ A
,A B
IProductoRepositoryC V
{ 
public		 
ProductoRepository		 !
(		! "

IDbContext		" ,
context		- 4
)		4 5
:		6 7
base		8 <
(		< =
context		= D
)		D E
{

 	
} 	
} 
} ­
_c:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Repositories\RoleRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
RoleRepository 
:  !
GenericRepository" 3
<3 4
Role4 8
>8 9
,9 :
IRoleRepository; J
{ 
public		 
RoleRepository		 
(		 

IDbContext		 (
context		) 0
)		0 1
:		2 3
base		4 8
(		8 9
context		9 @
)		@ A
{

 	
} 	
} 
} Ý
gc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Repositories\SubCategoriaRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class "
SubCategoriaRepository '
:( )
GenericRepository* ;
<; < 
ProductoSubCategoria< P
>P Q
,Q R#
ISubCategoriaRepositoryS j
{		 
public

 "
SubCategoriaRepository

 %
(

% &

IDbContext

& 0
context

1 8
)

8 9
:

: ;
base

< @
(

@ A
context

A H
)

H I
{ 	
} 	
} 
} ß
ic:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Repositories\TerceroClienteRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class $
TerceroClienteRepository )
:* +
GenericRepository, =
<= >
TerceroCliente> L
>L M
,M N%
ITerceroClienteRepositoryO h
{		 
public

 $
TerceroClienteRepository

 '
(

' (

IDbContext

( 2
context

3 :
)

: ;
:

< =
base

> B
(

B C
context

C J
)

J K
{ 	
} 	
} 
} ä
jc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Repositories\TerceroEmpleadoRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class %
TerceroEmpleadoRepository *
:+ ,
GenericRepository- >
<> ?
TerceroEmpleado? N
>N O
,O P&
ITerceroEmpleadoRepository		 "
{

 
public %
TerceroEmpleadoRepository (
(( )

IDbContext) 3
context4 ;
); <
:= >
base? C
(C D
contextD K
)K L
{ 	
} 	
} 
} è
kc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Repositories\TerceroProveedorRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class &
TerceroProveedorRepository +
:, -
GenericRepository. ?
<? @
TerceroProveedor@ P
>P Q
,Q R&
ITerceroProvedorRepositoryR l
{ 
public		 &
TerceroProveedorRepository		 )
(		) *

IDbContext		* 4
context		5 <
)		< =
:		> ?
base		@ D
(		D E
context		E L
)		L M
{

 	
} 	
} 
} ¼
bc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Repositories\TerceroRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class 
TerceroRepository "
:# $
GenericRepository% 6
<6 7
Tercero7 >
>> ?
,? @
ITerceroRepositoryA S
{ 
public		 
TerceroRepository		  
(		  !

IDbContext		! +
context		, 3
)		3 4
:		5 6
base		7 ;
(		; <
context		< C
)		C D
{

 	
} 	
} 
} ß
ic:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Repositories\TerceroUsuarioRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class $
TerceroUsuarioRepository )
:* +
GenericRepository, =
<= >
TerceroUsuario> L
>L M
,M N%
ITerceroUsuarioRepositoryO h
{ 
public		 $
TerceroUsuarioRepository		 '
(		' (

IDbContext		( 2
context		3 :
)		: ;
:		< =
base		> B
(		B C
context		C J
)		J K
{

 	
} 	
} 
} Ð
fc:\Users\duvan\source\repos\CompositePruebaDulces\Infrastructure\Repositories\TransaccionRepository.cs
	namespace 	
Infrastructure
 
. 
Repositories %
{ 
public 

class !
TransaccionRepository &
:' (
GenericRepository) :
<: ;
Transaccion; F
>F G
,G H"
ITransaccionRepositoryI _
{		 
public

 !
TransaccionRepository

 $
(

$ %

IDbContext

% /
context

0 7
)

7 8
:

9 :
base

; ?
(

? @
context

@ G
)

G H
{ 	
} 	
} 
} 